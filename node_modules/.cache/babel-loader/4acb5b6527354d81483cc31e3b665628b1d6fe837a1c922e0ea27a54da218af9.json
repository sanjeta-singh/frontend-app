{"ast":null,"code":"const {\n  OpenAI\n} = require(\"openai\"); // If not already at the top\n\n// üëá Set up OpenRouter API (same OpenAI SDK)\nconst openai = new OpenAI({\n  apiKey: process.env.OPENROUTER_API_KEY,\n  // Store this in .env\n  baseURL: \"https://openrouter.ai/api/v1\" // Important!\n});\napp.post(\"/api/chat\", async (req, res) => {\n  const {\n    message\n  } = req.body;\n  try {\n    const response = await openai.chat.completions.create({\n      model: \"openai/gpt-3.5-turbo\",\n      // You can swap this to other models later\n      messages: [{\n        role: \"system\",\n        content: \"You are a friendly, empathetic assistant in a creative support platform for children with cancer.\"\n      }, {\n        role: \"user\",\n        content: message\n      }]\n    });\n    res.json({\n      reply: response.choices[0].message.content\n    });\n  } catch (err) {\n    console.error(\"‚ùå OpenRouter Error:\", err.message);\n    res.status(500).json({\n      error: \"Sorry, the assistant is currently unavailable.\"\n    });\n  }\n});","map":{"version":3,"names":["OpenAI","require","openai","apiKey","process","env","OPENROUTER_API_KEY","baseURL","app","post","req","res","message","body","response","chat","completions","create","model","messages","role","content","json","reply","choices","err","console","error","status"],"sources":["C:/Users/Sanjay Singh/Desktop/NewCanvas/frontend-app/src/Chat.js"],"sourcesContent":["const { OpenAI } = require(\"openai\"); // If not already at the top\r\n\r\n// üëá Set up OpenRouter API (same OpenAI SDK)\r\nconst openai = new OpenAI({\r\n  apiKey: process.env.OPENROUTER_API_KEY, // Store this in .env\r\n  baseURL: \"https://openrouter.ai/api/v1\", // Important!\r\n});\r\n\r\napp.post(\"/api/chat\", async (req, res) => {\r\n  const { message } = req.body;\r\n\r\n  try {\r\n    const response = await openai.chat.completions.create({\r\n      model: \"openai/gpt-3.5-turbo\", // You can swap this to other models later\r\n      messages: [\r\n        { role: \"system\", content: \"You are a friendly, empathetic assistant in a creative support platform for children with cancer.\" },\r\n        { role: \"user\", content: message }\r\n      ]\r\n    });\r\n\r\n    res.json({ reply: response.choices[0].message.content });\r\n  } catch (err) {\r\n    console.error(\"‚ùå OpenRouter Error:\", err.message);\r\n    res.status(500).json({ error: \"Sorry, the assistant is currently unavailable.\" });\r\n  }\r\n});\r\n\r\n\r\n"],"mappings":"AAAA,MAAM;EAAEA;AAAO,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;AAEtC;AACA,MAAMC,MAAM,GAAG,IAAIF,MAAM,CAAC;EACxBG,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,kBAAkB;EAAE;EACxCC,OAAO,EAAE,8BAA8B,CAAE;AAC3C,CAAC,CAAC;AAEFC,GAAG,CAACC,IAAI,CAAC,WAAW,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACxC,MAAM;IAAEC;EAAQ,CAAC,GAAGF,GAAG,CAACG,IAAI;EAE5B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMZ,MAAM,CAACa,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC;MACpDC,KAAK,EAAE,sBAAsB;MAAE;MAC/BC,QAAQ,EAAE,CACR;QAAEC,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAoG,CAAC,EAChI;QAAED,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAET;MAAQ,CAAC;IAEtC,CAAC,CAAC;IAEFD,GAAG,CAACW,IAAI,CAAC;MAAEC,KAAK,EAAET,QAAQ,CAACU,OAAO,CAAC,CAAC,CAAC,CAACZ,OAAO,CAACS;IAAQ,CAAC,CAAC;EAC1D,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAACb,OAAO,CAAC;IACjDD,GAAG,CAACiB,MAAM,CAAC,GAAG,CAAC,CAACN,IAAI,CAAC;MAAEK,KAAK,EAAE;IAAiD,CAAC,CAAC;EACnF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}