{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sanjay Singh\\\\Desktop\\\\NewCanvas\\\\frontend-app\\\\src\\\\NoteItCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport \"./NoteItCanvas.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaRobot } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteItCanvas = () => {\n  _s();\n  const [note, setNote] = useState(\"\");\n  const canvasRef = useRef(null);\n  const [color, setColor] = useState(\"#000\");\n  const [brushSize, setBrushSize] = useState(5);\n  const [isErasing, setIsErasing] = useState(false);\n  const [tool, setTool] = useState(\"brush\");\n  const [shapes, setShapes] = useState([]);\n  const [dragging, setDragging] = useState(false);\n  const [draggedShapeIndex, setDraggedShapeIndex] = useState(null);\n  const [offset, setOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [toolActive, setToolActive] = useState(false);\n  const [chatbotOpen, setChatbotOpen] = useState(false);\n\n  // Function to resize the canvas to fit its container\n  const resizeCanvas = () => {\n    if (canvasRef.current) {\n      const container = canvasRef.current.canvasContainer;\n      const canvas = container.querySelector(\"canvas\");\n      if (canvas) {\n        // Set the canvas dimensions to match the container\n        canvas.width = container.offsetWidth;\n        canvas.height = container.offsetHeight;\n      }\n    }\n  };\n\n  // Resize the canvas on component mount and window resize\n  useEffect(() => {\n    resizeCanvas();\n    window.addEventListener(\"resize\", resizeCanvas);\n    return () => window.removeEventListener(\"resize\", resizeCanvas);\n  }, []);\n\n  // Function to toggle between eraser and brush\n  const toggleEraser = () => {\n    if (isErasing) {\n      setColor(\"#000\"); // Restore original color\n    } else {\n      setColor(\"#FFFFFF\"); // White color for eraser effect\n    }\n    setIsErasing(!isErasing);\n  };\n\n  // Function to save the drawing as an image with white background\n  const saveDrawing = () => {\n    if (!canvasRef.current) return;\n\n    // Get the original canvas\n    const canvas = canvasRef.current.canvasContainer.children[1];\n\n    // Create a new canvas for the full content\n    const textCanvas = document.createElement(\"canvas\");\n    const textCtx = textCanvas.getContext(\"2d\");\n\n    // Set the size of the new canvas (you can adjust these dimensions)\n    const width = 800;\n    const height = 600;\n    textCanvas.width = width;\n    textCanvas.height = height;\n\n    // Fill the background with white color\n    textCtx.fillStyle = \"#ffffff\";\n    textCtx.fillRect(0, 0, width, height);\n\n    // Draw the original canvas (drawing) to the new canvas\n    textCtx.drawImage(canvas, 0, 0, canvas.width, canvas.height);\n\n    // Draw the shapes over the canvas\n    shapes.forEach(shape => {\n      textCtx.fillStyle = shape.fillColor;\n      textCtx.strokeStyle = color;\n      textCtx.lineWidth = brushSize;\n      if (shape.type === \"rectangle\" || shape.type === \"square\") {\n        textCtx.fillRect(shape.x, shape.y, shape.width, shape.height);\n        textCtx.strokeRect(shape.x, shape.y, shape.width, shape.height);\n      } else if (shape.type === \"diamond\") {\n        textCtx.beginPath();\n        textCtx.moveTo(shape.x, shape.y - shape.height / 2);\n        textCtx.lineTo(shape.x - shape.width / 2, shape.y);\n        textCtx.lineTo(shape.x, shape.y + shape.height / 2);\n        textCtx.lineTo(shape.x + shape.width / 2, shape.y);\n        textCtx.closePath();\n        textCtx.fill();\n        textCtx.stroke();\n      } else if (shape.type === \"circle\") {\n        textCtx.beginPath();\n        textCtx.arc(shape.x, shape.y, shape.radiusX, 0, 2 * Math.PI);\n        textCtx.fill();\n        textCtx.stroke();\n      } else if (shape.type === \"oval\") {\n        textCtx.beginPath();\n        textCtx.ellipse(shape.x, shape.y, shape.radiusX, shape.radiusY, 0, 0, 2 * Math.PI);\n        textCtx.fill();\n        textCtx.stroke();\n      } else if (shape.type === \"triangle\") {\n        textCtx.beginPath();\n        textCtx.moveTo(shape.x, shape.y);\n        textCtx.lineTo(shape.x + shape.width / 2, shape.y - shape.height);\n        textCtx.lineTo(shape.x + shape.width, shape.y);\n        textCtx.closePath();\n        textCtx.fill();\n        textCtx.stroke();\n      }\n    });\n\n    // Draw the text (note) over the canvas\n    if (note) {\n      textCtx.font = \"20px Arial\";\n      textCtx.fillStyle = \"#000\";\n      textCtx.fillText(note, 20, height - 30);\n    }\n\n    // Convert the complete canvas to an image URL and download it\n    const dataUrl = textCanvas.toDataURL(\"image/png\");\n    const link = document.createElement(\"a\");\n    link.href = dataUrl;\n    link.download = \"drawing_with_white_background.png\";\n    link.click();\n  };\n\n  // Function to draw a shape at the clicked position\n  const drawShape = e => {\n    if (tool === \"brush\" || dragging || !toolActive) return;\n    const canvas = canvasRef.current.canvasContainer.children[1];\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const newShape = {\n      type: tool,\n      x,\n      y,\n      width: 100,\n      height: tool === \"square\" || tool === \"diamond\" ? 100 : 70,\n      radiusX: tool === \"oval\" ? 100 : 50,\n      radiusY: tool === \"oval\" ? 70 : 50,\n      fillColor: \"#ffffff\"\n    };\n    setShapes([...shapes, newShape]);\n    setToolActive(false);\n  };\n\n  // Function to handle mouse down event for dragging\n  const handleMouseDown = e => {\n    const canvas = canvasRef.current.canvasContainer.children[1];\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const clickedShapeIndex = shapes.findIndex(shape => {\n      if (shape.type === \"rectangle\" || shape.type === \"square\" || shape.type === \"diamond\") {\n        return x >= shape.x && x <= shape.x + shape.width && y >= shape.y && y <= shape.y + shape.height;\n      } else if (shape.type === \"circle\" || shape.type === \"oval\") {\n        const dx = x - shape.x;\n        const dy = y - shape.y;\n        return dx * dx / (shape.radiusX * shape.radiusX) + dy * dy / (shape.radiusY * shape.radiusY) <= 1;\n      } else if (shape.type === \"triangle\") {\n        return x >= shape.x && x <= shape.x + shape.width && y >= shape.y && y <= shape.y + shape.height;\n      }\n      return false;\n    });\n    if (clickedShapeIndex !== -1) {\n      setDragging(true);\n      setDraggedShapeIndex(clickedShapeIndex);\n      setOffset({\n        x: x - shapes[clickedShapeIndex].x,\n        y: y - shapes[clickedShapeIndex].y\n      });\n      canvasRef.current.brushRadius = 0;\n    }\n  };\n\n  // Function to handle mouse move event for dragging\n  const handleMouseMove = e => {\n    if (!dragging || draggedShapeIndex === null) return;\n    const canvas = canvasRef.current.canvasContainer.children[1];\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const updatedShapes = [...shapes];\n    updatedShapes[draggedShapeIndex] = {\n      ...updatedShapes[draggedShapeIndex],\n      x: x - offset.x,\n      y: y - offset.y\n    };\n    setShapes(updatedShapes);\n  };\n\n  // Function to handle mouse up event for dragging\n  const handleMouseUp = () => {\n    if (dragging) {\n      setDragging(false);\n      setDraggedShapeIndex(null);\n      canvasRef.current.brushRadius = brushSize;\n    }\n  };\n\n  // Function to draw all shapes on the canvas\n  const drawAllShapes = () => {\n    const canvas = canvasRef.current.canvasContainer.children[1];\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    shapes.forEach(shape => {\n      ctx.strokeStyle = color;\n      ctx.lineWidth = brushSize;\n      ctx.fillStyle = shape.fillColor;\n      if (shape.type === \"rectangle\" || shape.type === \"square\") {\n        ctx.fillRect(shape.x, shape.y, shape.width, shape.height);\n        ctx.strokeRect(shape.x, shape.y, shape.width, shape.height);\n      } else if (shape.type === \"diamond\") {\n        ctx.beginPath();\n        ctx.moveTo(shape.x, shape.y - shape.height / 2);\n        ctx.lineTo(shape.x - shape.width / 2, shape.y);\n        ctx.lineTo(shape.x, shape.y + shape.height / 2);\n        ctx.lineTo(shape.x + shape.width / 2, shape.y);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n      } else if (shape.type === \"circle\") {\n        ctx.beginPath();\n        ctx.arc(shape.x, shape.y, shape.radiusX, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.stroke();\n      } else if (shape.type === \"oval\") {\n        ctx.beginPath();\n        ctx.ellipse(shape.x, shape.y, shape.radiusX, shape.radiusY, 0, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.stroke();\n      } else if (shape.type === \"triangle\") {\n        ctx.beginPath();\n        ctx.moveTo(shape.x, shape.y);\n        ctx.lineTo(shape.x + shape.width / 2, shape.y - shape.height);\n        ctx.lineTo(shape.x + shape.width, shape.y);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n      }\n    });\n  };\n\n  // Re-render all shapes whenever the shapes state changes\n  useEffect(() => {\n    drawAllShapes();\n  }, [shapes]);\n\n  // Function to handle tool selection\n  const handleToolChange = newTool => {\n    setTool(newTool);\n    setToolActive(true);\n  };\n\n  // Function to undo the last action\n  const undoShape = () => {\n    if (shapes.length > 0) {\n      setShapes(prevShapes => prevShapes.slice(0, -1));\n    } else {\n      var _canvasRef$current;\n      (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.undo();\n    }\n  };\n\n  // SVG Icons for Shapes\n  const RectangleIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"30\",\n    height: \"30\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    children: /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: \"2\",\n      y: \"2\",\n      width: \"20\",\n      height: \"20\",\n      stroke: \"currentColor\",\n      strokeWidth: \"2\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n  const SquareIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"30\",\n    height: \"30\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    children: /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: \"2\",\n      y: \"2\",\n      width: \"20\",\n      height: \"20\",\n      stroke: \"currentColor\",\n      strokeWidth: \"2\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n  const CircleIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"30\",\n    height: \"30\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    children: /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"12\",\n      cy: \"12\",\n      r: \"10\",\n      stroke: \"currentColor\",\n      strokeWidth: \"2\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 5\n  }, this);\n  const TriangleIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"30\",\n    height: \"30\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n      points: \"12,2 22,22 2,22\",\n      stroke: \"currentColor\",\n      strokeWidth: \"2\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n  const DiamondIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"30\",\n    height: \"30\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n      points: \"12,2 22,12 12,22 2,12\",\n      stroke: \"currentColor\",\n      strokeWidth: \"2\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n  const OvalIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"30\",\n    height: \"30\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    children: /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"12\",\n      cy: \"12\",\n      rx: \"10\",\n      ry: \"6\",\n      stroke: \"currentColor\",\n      strokeWidth: \"2\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 5\n  }, this);\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Tools\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleToolChange(\"brush\"),\n              className: tool === \"brush\" ? \"active-tool\" : \"\",\n              children: /*#__PURE__*/_jsxDEV(BrushIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleEraser,\n              children: isErasing ? \"Use Brush\" : \"Use Eraser\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Colour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: color,\n            onChange: e => {\n              setColor(e.target.value);\n              setIsErasing(false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"10\",\n            value: brushSize,\n            onChange: e => setBrushSize(Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Shapes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shape-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleToolChange(\"rectangle\"),\n              className: tool === \"rectangle\" ? \"active-tool\" : \"\",\n              children: /*#__PURE__*/_jsxDEV(RectangleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleToolChange(\"square\"),\n              className: tool === \"square\" ? \"active-tool\" : \"\",\n              children: /*#__PURE__*/_jsxDEV(SquareIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleToolChange(\"circle\"),\n              className: tool === \"circle\" ? \"active-tool\" : \"\",\n              children: /*#__PURE__*/_jsxDEV(CircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shape-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleToolChange(\"triangle\"),\n              className: tool === \"triangle\" ? \"active-tool\" : \"\",\n              children: /*#__PURE__*/_jsxDEV(TriangleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleToolChange(\"diamond\"),\n              className: tool === \"diamond\" ? \"active-tool\" : \"\",\n              children: /*#__PURE__*/_jsxDEV(DiamondIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleToolChange(\"oval\"),\n              className: tool === \"oval\" ? \"active-tool\" : \"\",\n              children: /*#__PURE__*/_jsxDEV(OvalIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              var _canvasRef$current2;\n              return (_canvasRef$current2 = canvasRef.current) === null || _canvasRef$current2 === void 0 ? void 0 : _canvasRef$current2.clear();\n            },\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: undoShape,\n            children: \"Undo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: drawShape,\n        onMouseDown: handleMouseDown,\n        onMouseMove: handleMouseMove,\n        onMouseUp: handleMouseUp,\n        style: {\n          width: \"100%\",\n          height: \"500px\",\n          position: \"relative\",\n          border: \"1px solid #ccc\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CanvasDraw, {\n          ref: canvasRef,\n          brushColor: color,\n          brushRadius: tool === \"brush\" ? brushSize : 0,\n          lazyRadius: 0,\n          canvasWidth: 800,\n          canvasHeight: 500,\n          hideGrid: true,\n          className: \"drawing-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"note-input\",\n        placeholder: \"Write your note...\",\n        value: note,\n        onChange: e => setNote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveDrawing,\n          children: \"Save Drawing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/gallery'),\n          children: \"Go to Gallery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chatbot-panel ${chatbotOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chatbot-toggle\",\n        onClick: () => setChatbotOpen(!chatbotOpen),\n        children: [/*#__PURE__*/_jsxDEV(FaRobot, {\n          size: 24,\n          color: \"#9163cb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this), chatbotOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Need help with your drawing?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"open-chatbot-btn\",\n          onClick: () => navigate('/chat'),\n          children: \"Open Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteItCanvas, \"OR2bm38T8mJtZoyPvDCMWJMWUlw=\", false, function () {\n  return [useNavigate];\n});\n_c = NoteItCanvas;\nexport default NoteItCanvas;\nvar _c;\n$RefreshReg$(_c, \"NoteItCanvas\");","map":{"version":3,"names":["React","useState","useRef","useEffect","CanvasDraw","useNavigate","FaRobot","jsxDEV","_jsxDEV","NoteItCanvas","_s","note","setNote","canvasRef","color","setColor","brushSize","setBrushSize","isErasing","setIsErasing","tool","setTool","shapes","setShapes","dragging","setDragging","draggedShapeIndex","setDraggedShapeIndex","offset","setOffset","x","y","toolActive","setToolActive","chatbotOpen","setChatbotOpen","resizeCanvas","current","container","canvasContainer","canvas","querySelector","width","offsetWidth","height","offsetHeight","window","addEventListener","removeEventListener","toggleEraser","saveDrawing","children","textCanvas","document","createElement","textCtx","getContext","fillStyle","fillRect","drawImage","forEach","shape","fillColor","strokeStyle","lineWidth","type","strokeRect","beginPath","moveTo","lineTo","closePath","fill","stroke","arc","radiusX","Math","PI","ellipse","radiusY","font","fillText","dataUrl","toDataURL","link","href","download","click","drawShape","e","rect","getBoundingClientRect","clientX","left","clientY","top","newShape","handleMouseDown","clickedShapeIndex","findIndex","dx","dy","brushRadius","handleMouseMove","updatedShapes","handleMouseUp","drawAllShapes","ctx","clearRect","handleToolChange","newTool","undoShape","length","prevShapes","slice","_canvasRef$current","undo","RectangleIcon","viewBox","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","SquareIcon","CircleIcon","cx","cy","r","TriangleIcon","points","DiamondIcon","OvalIcon","rx","ry","navigate","className","onClick","BrushIcon","value","onChange","target","min","max","Number","_canvasRef$current2","clear","onMouseDown","onMouseMove","onMouseUp","style","position","border","ref","brushColor","lazyRadius","canvasWidth","canvasHeight","hideGrid","placeholder","size","_c","$RefreshReg$"],"sources":["C:/Users/Sanjay Singh/Desktop/NewCanvas/frontend-app/src/NoteItCanvas.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport CanvasDraw from \"react-canvas-draw\";\r\nimport \"./NoteItCanvas.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FaRobot } from 'react-icons/fa';\r\n\r\nconst NoteItCanvas = () => {\r\n  const [note, setNote] = useState(\"\");\r\n  const canvasRef = useRef(null);\r\n  const [color, setColor] = useState(\"#000\");\r\n  const [brushSize, setBrushSize] = useState(5);\r\n  const [isErasing, setIsErasing] = useState(false);\r\n  const [tool, setTool] = useState(\"brush\");\r\n  const [shapes, setShapes] = useState([]);\r\n  const [dragging, setDragging] = useState(false);\r\n  const [draggedShapeIndex, setDraggedShapeIndex] = useState(null);\r\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\r\n  const [toolActive, setToolActive] = useState(false);\r\n  const [chatbotOpen, setChatbotOpen] = useState(false);\r\n\r\n  // Function to resize the canvas to fit its container\r\n  const resizeCanvas = () => {\r\n    if (canvasRef.current) {\r\n      const container = canvasRef.current.canvasContainer;\r\n      const canvas = container.querySelector(\"canvas\");\r\n\r\n      if (canvas) {\r\n        // Set the canvas dimensions to match the container\r\n        canvas.width = container.offsetWidth;\r\n        canvas.height = container.offsetHeight;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Resize the canvas on component mount and window resize\r\n  useEffect(() => {\r\n    resizeCanvas();\r\n    window.addEventListener(\"resize\", resizeCanvas);\r\n    return () => window.removeEventListener(\"resize\", resizeCanvas);\r\n  }, []);\r\n\r\n  // Function to toggle between eraser and brush\r\n  const toggleEraser = () => {\r\n    if (isErasing) {\r\n      setColor(\"#000\"); // Restore original color\r\n    } else {\r\n      setColor(\"#FFFFFF\"); // White color for eraser effect\r\n    }\r\n    setIsErasing(!isErasing);\r\n  };\r\n\r\n  // Function to save the drawing as an image with white background\r\n  const saveDrawing = () => {\r\n    if (!canvasRef.current) return;\r\n\r\n    // Get the original canvas\r\n    const canvas = canvasRef.current.canvasContainer.children[1];\r\n    \r\n    // Create a new canvas for the full content\r\n    const textCanvas = document.createElement(\"canvas\");\r\n    const textCtx = textCanvas.getContext(\"2d\");\r\n\r\n    // Set the size of the new canvas (you can adjust these dimensions)\r\n    const width = 800;\r\n    const height = 600;\r\n    textCanvas.width = width;\r\n    textCanvas.height = height;\r\n\r\n    // Fill the background with white color\r\n    textCtx.fillStyle = \"#ffffff\";\r\n    textCtx.fillRect(0, 0, width, height);\r\n\r\n    // Draw the original canvas (drawing) to the new canvas\r\n    textCtx.drawImage(canvas, 0, 0, canvas.width, canvas.height);\r\n\r\n    // Draw the shapes over the canvas\r\n    shapes.forEach((shape) => {\r\n      textCtx.fillStyle = shape.fillColor;\r\n      textCtx.strokeStyle = color;\r\n      textCtx.lineWidth = brushSize;\r\n\r\n      if (shape.type === \"rectangle\" || shape.type === \"square\") {\r\n        textCtx.fillRect(shape.x, shape.y, shape.width, shape.height);\r\n        textCtx.strokeRect(shape.x, shape.y, shape.width, shape.height);\r\n      } else if (shape.type === \"diamond\") {\r\n        textCtx.beginPath();\r\n        textCtx.moveTo(shape.x, shape.y - shape.height / 2);\r\n        textCtx.lineTo(shape.x - shape.width / 2, shape.y);\r\n        textCtx.lineTo(shape.x, shape.y + shape.height / 2);\r\n        textCtx.lineTo(shape.x + shape.width / 2, shape.y);\r\n        textCtx.closePath();\r\n        textCtx.fill();\r\n        textCtx.stroke();\r\n      } else if (shape.type === \"circle\") {\r\n        textCtx.beginPath();\r\n        textCtx.arc(shape.x, shape.y, shape.radiusX, 0, 2 * Math.PI);\r\n        textCtx.fill();\r\n        textCtx.stroke();\r\n      } else if (shape.type === \"oval\") {\r\n        textCtx.beginPath();\r\n        textCtx.ellipse(shape.x, shape.y, shape.radiusX, shape.radiusY, 0, 0, 2 * Math.PI);\r\n        textCtx.fill();\r\n        textCtx.stroke();\r\n      } else if (shape.type === \"triangle\") {\r\n        textCtx.beginPath();\r\n        textCtx.moveTo(shape.x, shape.y);\r\n        textCtx.lineTo(shape.x + shape.width / 2, shape.y - shape.height);\r\n        textCtx.lineTo(shape.x + shape.width, shape.y);\r\n        textCtx.closePath();\r\n        textCtx.fill();\r\n        textCtx.stroke();\r\n      }\r\n    });\r\n\r\n    // Draw the text (note) over the canvas\r\n    if (note) {\r\n      textCtx.font = \"20px Arial\";\r\n      textCtx.fillStyle = \"#000\";\r\n      textCtx.fillText(note, 20, height - 30);\r\n    }\r\n\r\n    // Convert the complete canvas to an image URL and download it\r\n    const dataUrl = textCanvas.toDataURL(\"image/png\");\r\n    const link = document.createElement(\"a\");\r\n    link.href = dataUrl;\r\n    link.download = \"drawing_with_white_background.png\";\r\n    link.click();\r\n  };\r\n\r\n  // Function to draw a shape at the clicked position\r\n  const drawShape = (e) => {\r\n    if (tool === \"brush\" || dragging || !toolActive) return;\r\n\r\n    const canvas = canvasRef.current.canvasContainer.children[1];\r\n    const rect = canvas.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n\r\n    const newShape = {\r\n      type: tool,\r\n      x,\r\n      y,\r\n      width: 100,\r\n      height: tool === \"square\" || tool === \"diamond\" ? 100 : 70,\r\n      radiusX: tool === \"oval\" ? 100 : 50,\r\n      radiusY: tool === \"oval\" ? 70 : 50,\r\n      fillColor: \"#ffffff\",\r\n    };\r\n\r\n    setShapes([...shapes, newShape]);\r\n    setToolActive(false);\r\n  };\r\n\r\n  // Function to handle mouse down event for dragging\r\n  const handleMouseDown = (e) => {\r\n    const canvas = canvasRef.current.canvasContainer.children[1];\r\n    const rect = canvas.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n\r\n    const clickedShapeIndex = shapes.findIndex((shape) => {\r\n      if (shape.type === \"rectangle\" || shape.type === \"square\" || shape.type === \"diamond\") {\r\n        return x >= shape.x && x <= shape.x + shape.width && y >= shape.y && y <= shape.y + shape.height;\r\n      } else if (shape.type === \"circle\" || shape.type === \"oval\") {\r\n        const dx = x - shape.x;\r\n        const dy = y - shape.y;\r\n        return (dx * dx) / (shape.radiusX * shape.radiusX) + (dy * dy) / (shape.radiusY * shape.radiusY) <= 1;\r\n      } else if (shape.type === \"triangle\") {\r\n        return (\r\n          x >= shape.x && x <= shape.x + shape.width && y >= shape.y && y <= shape.y + shape.height\r\n        );\r\n      }\r\n      return false;\r\n    });\r\n\r\n    if (clickedShapeIndex !== -1) {\r\n      setDragging(true);\r\n      setDraggedShapeIndex(clickedShapeIndex);\r\n      setOffset({ x: x - shapes[clickedShapeIndex].x, y: y - shapes[clickedShapeIndex].y });\r\n      canvasRef.current.brushRadius = 0;\r\n    }\r\n  };\r\n\r\n  // Function to handle mouse move event for dragging\r\n  const handleMouseMove = (e) => {\r\n    if (!dragging || draggedShapeIndex === null) return;\r\n\r\n    const canvas = canvasRef.current.canvasContainer.children[1];\r\n    const rect = canvas.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n\r\n    const updatedShapes = [...shapes];\r\n    updatedShapes[draggedShapeIndex] = {\r\n      ...updatedShapes[draggedShapeIndex],\r\n      x: x - offset.x,\r\n      y: y - offset.y,\r\n    };\r\n\r\n    setShapes(updatedShapes);\r\n  };\r\n\r\n  // Function to handle mouse up event for dragging\r\n  const handleMouseUp = () => {\r\n    if (dragging) {\r\n      setDragging(false);\r\n      setDraggedShapeIndex(null);\r\n      canvasRef.current.brushRadius = brushSize;\r\n    }\r\n  };\r\n\r\n  // Function to draw all shapes on the canvas\r\n  const drawAllShapes = () => {\r\n    const canvas = canvasRef.current.canvasContainer.children[1];\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    shapes.forEach((shape) => {\r\n      ctx.strokeStyle = color;\r\n      ctx.lineWidth = brushSize;\r\n      ctx.fillStyle = shape.fillColor;\r\n\r\n      if (shape.type === \"rectangle\" || shape.type === \"square\") {\r\n        ctx.fillRect(shape.x, shape.y, shape.width, shape.height);\r\n        ctx.strokeRect(shape.x, shape.y, shape.width, shape.height);\r\n      } else if (shape.type === \"diamond\") {\r\n        ctx.beginPath();\r\n        ctx.moveTo(shape.x, shape.y - shape.height / 2);\r\n        ctx.lineTo(shape.x - shape.width / 2, shape.y);\r\n        ctx.lineTo(shape.x, shape.y + shape.height / 2);\r\n        ctx.lineTo(shape.x + shape.width / 2, shape.y);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n      } else if (shape.type === \"circle\") {\r\n        ctx.beginPath();\r\n        ctx.arc(shape.x, shape.y, shape.radiusX, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n        ctx.stroke();\r\n      } else if (shape.type === \"oval\") {\r\n        ctx.beginPath();\r\n        ctx.ellipse(shape.x, shape.y, shape.radiusX, shape.radiusY, 0, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n        ctx.stroke();\r\n      } else if (shape.type === \"triangle\") {\r\n        ctx.beginPath();\r\n        ctx.moveTo(shape.x, shape.y);\r\n        ctx.lineTo(shape.x + shape.width / 2, shape.y - shape.height);\r\n        ctx.lineTo(shape.x + shape.width, shape.y);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n      }\r\n    });\r\n  };\r\n\r\n  // Re-render all shapes whenever the shapes state changes\r\n  useEffect(() => {\r\n    drawAllShapes();\r\n  }, [shapes]);\r\n\r\n  // Function to handle tool selection\r\n  const handleToolChange = (newTool) => {\r\n    setTool(newTool);\r\n    setToolActive(true);\r\n  };\r\n\r\n  // Function to undo the last action\r\n  const undoShape = () => {\r\n    if (shapes.length > 0) {\r\n      setShapes((prevShapes) => prevShapes.slice(0, -1));\r\n    } else {\r\n      canvasRef.current?.undo();\r\n    }\r\n  };\r\n\r\n  // SVG Icons for Shapes\r\n  const RectangleIcon = () => (\r\n    <svg width=\"30\" height=\"30\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n      <rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" />\r\n    </svg>\r\n  );\r\n\r\n  const SquareIcon = () => (\r\n    <svg width=\"30\" height=\"30\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n      <rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" />\r\n    </svg>\r\n  );\r\n\r\n  const CircleIcon = () => (\r\n    <svg width=\"30\" height=\"30\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n      <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" />\r\n    </svg>\r\n  );\r\n\r\n  const TriangleIcon = () => (\r\n    <svg width=\"30\" height=\"30\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n      <polygon points=\"12,2 22,22 2,22\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" />\r\n    </svg>\r\n  );\r\n\r\n  const DiamondIcon = () => (\r\n    <svg width=\"30\" height=\"30\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n      <polygon points=\"12,2 22,12 12,22 2,12\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" />\r\n    </svg>\r\n  );\r\n\r\n  const OvalIcon = () => (\r\n    <svg width=\"30\" height=\"30\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n      <ellipse cx=\"12\" cy=\"12\" rx=\"10\" ry=\"6\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" />\r\n    </svg>\r\n  );\r\n\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"note-container\">\r\n      {/* Main Box with Border */}\r\n      <div className=\"main-box\">\r\n        {/* Top Section: Grid with 4 columns */}\r\n        <div className=\"top-section\">\r\n          {/* Column 1: Tools */}\r\n          <div className=\"column\">\r\n            <h3>Tools</h3>\r\n            <div className=\"button-row\">\r\n              <button\r\n                onClick={() => handleToolChange(\"brush\")}\r\n                className={tool === \"brush\" ? \"active-tool\" : \"\"}\r\n              >\r\n                <BrushIcon />\r\n              </button>\r\n              <button onClick={toggleEraser}>\r\n                {isErasing ? \"Use Brush\" : \"Use Eraser\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Column 2: Colour */}\r\n          <div className=\"column\">\r\n            <h3>Colour</h3>\r\n            <input\r\n              type=\"color\"\r\n              value={color}\r\n              onChange={(e) => {\r\n                setColor(e.target.value);\r\n                setIsErasing(false);\r\n              }}\r\n            />\r\n            <input\r\n              type=\"range\"\r\n              min=\"1\"\r\n              max=\"10\"\r\n              value={brushSize}\r\n              onChange={(e) => setBrushSize(Number(e.target.value))}\r\n            />\r\n          </div>\r\n\r\n          {/* Column 3: Shapes */}\r\n          <div className=\"column\">\r\n            <h3>Shapes</h3>\r\n            {/* Row 1: Rectangle, Square, Circle */}\r\n            <div className=\"shape-row\">\r\n              <button\r\n                onClick={() => handleToolChange(\"rectangle\")}\r\n                className={tool === \"rectangle\" ? \"active-tool\" : \"\"}\r\n              >\r\n                <RectangleIcon />\r\n              </button>\r\n              <button\r\n                onClick={() => handleToolChange(\"square\")}\r\n                className={tool === \"square\" ? \"active-tool\" : \"\"}\r\n              >\r\n                <SquareIcon />\r\n              </button>\r\n              <button\r\n                onClick={() => handleToolChange(\"circle\")}\r\n                className={tool === \"circle\" ? \"active-tool\" : \"\"}\r\n              >\r\n                <CircleIcon />\r\n              </button>\r\n            </div>\r\n\r\n            {/* Row 2: Triangle, Diamond, Oval */}\r\n            <div className=\"shape-row\">\r\n              <button\r\n                onClick={() => handleToolChange(\"triangle\")}\r\n                className={tool === \"triangle\" ? \"active-tool\" : \"\"}\r\n              >\r\n                <TriangleIcon />\r\n              </button>\r\n              <button\r\n                onClick={() => handleToolChange(\"diamond\")}\r\n                className={tool === \"diamond\" ? \"active-tool\" : \"\"}\r\n              >\r\n                <DiamondIcon />\r\n              </button>\r\n              <button\r\n                onClick={() => handleToolChange(\"oval\")}\r\n                className={tool === \"oval\" ? \"active-tool\" : \"\"}\r\n              >\r\n                <OvalIcon />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Column 4: Edit */}\r\n          <div className=\"column\">\r\n            <h3>Edit</h3>\r\n            <button onClick={() => canvasRef.current?.clear()}>Clear</button>\r\n            <button onClick={undoShape}>Undo</button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Drawing Canvas */}\r\n        <div\r\n          onClick={drawShape}\r\n          onMouseDown={handleMouseDown}\r\n          onMouseMove={handleMouseMove}\r\n          onMouseUp={handleMouseUp}\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"500px\",\r\n            position: \"relative\",\r\n            border: \"1px solid #ccc\",\r\n          }}\r\n        >\r\n          <CanvasDraw\r\n            ref={canvasRef}\r\n            brushColor={color}\r\n            brushRadius={tool === \"brush\" ? brushSize : 0}\r\n            lazyRadius={0}\r\n            canvasWidth={800}\r\n            canvasHeight={500}\r\n            hideGrid\r\n            className=\"drawing-canvas\"\r\n          />\r\n        </div>\r\n\r\n        {/* Text Input for Notes */}\r\n        <textarea\r\n          className=\"note-input\"\r\n          placeholder=\"Write your note...\"\r\n          value={note}\r\n          onChange={(e) => setNote(e.target.value)}\r\n        />\r\n\r\n        {/* Buttons for Save */}\r\n        <div className=\"btn-group\">\r\n          <button onClick={saveDrawing}>Save Drawing</button>\r\n          <button onClick={() => navigate('/gallery')}>Go to Gallery</button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* NEW CHATBOT PANEL */}\r\n      <div className={`chatbot-panel ${chatbotOpen ? 'open' : ''}`}>\r\n        <button \r\n          className=\"chatbot-toggle\"\r\n          onClick={() => setChatbotOpen(!chatbotOpen)}\r\n        >\r\n          <FaRobot size={24} color=\"#9163cb\" />\r\n          <span>Chatbot</span>\r\n        </button>\r\n        \r\n        {chatbotOpen && (\r\n          <div className=\"chatbot-content\">\r\n            <p>Need help with your drawing?</p>\r\n            <button \r\n              className=\"open-chatbot-btn\"\r\n              onClick={() => navigate('/chat')}\r\n            >\r\n              Open Chatbot\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteItCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}