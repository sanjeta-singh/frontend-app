{"ast":null,"code":"var _this = this;\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar TOUCH_SLOP = 10;\nvar PINCH_TIMEOUT_MS = 250;\nvar SUPPRESS_SCROLL = function SUPPRESS_SCROLL(e) {\n  // No zooming while drawing, but we'll cancel the scroll event.\n  e.preventDefault();\n  return _this;\n};\n/**\r\n * The default state for the interaction state machine. Supports zoom and\r\n * initiating pan and drawing actions.\r\n */\n\nexport var DefaultState = function DefaultState() {\n  var _this2 = this;\n  _defineProperty(this, \"handleMouseWheel\", function (e, canvasDraw) {\n    var _canvasDraw$props = canvasDraw.props,\n      disabled = _canvasDraw$props.disabled,\n      enablePanAndZoom = _canvasDraw$props.enablePanAndZoom,\n      mouseZoomFactor = _canvasDraw$props.mouseZoomFactor;\n    if (disabled) {\n      return new DisabledState();\n    } else if (enablePanAndZoom && e.ctrlKey) {\n      e.preventDefault();\n      canvasDraw.coordSystem.scaleAtClientPoint(mouseZoomFactor * e.deltaY, clientPointFromEvent(e));\n    }\n    return _this2;\n  });\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\n    if (canvasDraw.props.disabled) {\n      return new DisabledState();\n    } else if (e.ctrlKey && canvasDraw.props.enablePanAndZoom) {\n      return new PanState().handleDrawStart(e, canvasDraw);\n    } else {\n      return new WaitForPinchState().handleDrawStart(e, canvasDraw);\n    }\n  });\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    if (canvasDraw.props.disabled) {\n      return new DisabledState();\n    } else {\n      var _viewPointFromEvent = viewPointFromEvent(canvasDraw.coordSystem, e),\n        x = _viewPointFromEvent.x,\n        y = _viewPointFromEvent.y;\n      canvasDraw.lazy.update({\n        x: x,\n        y: y\n      });\n      return _this2;\n    }\n  });\n  _defineProperty(this, \"handleDrawEnd\", function (e, canvasDraw) {\n    return canvasDraw.props.disabled ? new DisabledState() : _this2;\n  });\n};\n;\n/**\r\n * This state is used as long as the disabled prop is active. It ignores all\r\n * events and doesn't prevent default actions. The disabled state can only be\r\n * triggered from the default state (i.e., while no action is actively being\r\n * performed).\r\n */\n\nexport var DisabledState = function DisabledState() {\n  var _this3 = this;\n  _defineProperty(this, \"handleMouseWheel\", function (e, canvasDraw) {\n    if (canvasDraw.props.disabled) {\n      return _this3;\n    } else {\n      return new DefaultState().handleMouseWheel(e, canvasDraw);\n    }\n  });\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\n    if (canvasDraw.props.disabled) {\n      return _this3;\n    } else {\n      return new DefaultState().handleDrawStart(e, canvasDraw);\n    }\n  });\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    if (canvasDraw.props.disabled) {\n      return _this3;\n    } else {\n      return new DefaultState().handleDrawMove(e, canvasDraw);\n    }\n  });\n  _defineProperty(this, \"handleDrawEnd\", function (e, canvasDraw) {\n    if (canvasDraw.props.disabled) {\n      return _this3;\n    } else {\n      return new DefaultState().handleDrawEnd(e, canvasDraw);\n    }\n  });\n};\n/**\r\n * This state is active as long as the user is panning the image. This state is\r\n * retained until the pan ceases.\r\n */\n\nexport var PanState = function PanState() {\n  var _this4 = this;\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\n    e.preventDefault();\n    _this4.dragStart = clientPointFromEvent(e);\n    _this4.panStart = {\n      x: canvasDraw.coordSystem.x,\n      y: canvasDraw.coordSystem.y\n    };\n    return _this4;\n  });\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    e.preventDefault();\n    var _clientPointFromEvent = clientPointFromEvent(e),\n      clientX = _clientPointFromEvent.clientX,\n      clientY = _clientPointFromEvent.clientY;\n    var dx = clientX - _this4.dragStart.clientX;\n    var dy = clientY - _this4.dragStart.clientY;\n    canvasDraw.coordSystem.setView({\n      x: _this4.panStart.x + dx,\n      y: _this4.panStart.y + dy\n    });\n    return _this4;\n  });\n  _defineProperty(this, \"handleDrawEnd\", function () {\n    return new DefaultState();\n  });\n};\n/**\r\n * This state is active when the user has initiated the drawing action but has\r\n * not yet created any lines. We use this state to try and detect a second touch\r\n * event to initiate a pinch-zoom action. We'll give up on that if enough time\r\n * or movement happens without a second touch.\r\n */\n\nexport var WaitForPinchState = function WaitForPinchState() {\n  var _this5 = this;\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\n    var enablePanAndZoom = canvasDraw.props.enablePanAndZoom;\n    e.preventDefault(); // We're going to transition immediately into lazy-drawing mode if\n    // pan-and-zoom isn't enabled or if this event wasn't triggered by a touch.\n\n    if (!e.touches || !e.touches.length || !enablePanAndZoom) {\n      return new DrawingState().handleDrawStart(e, canvasDraw);\n    } // If we already have two touch events, we can move straight into pinch/pan\n\n    if (enablePanAndZoom && e.touches && e.touches.length >= 2) {\n      return new ScaleOrPanState().handleDrawStart(e, canvasDraw);\n    }\n    return _this5.handleDrawMove(e, canvasDraw);\n  });\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    e.preventDefault(); // If we have two touches, move to pinch/pan (we don't have to recheck\n    // whether zoom is enabled because that happend in draw start).\n\n    if (e.touches && e.touches.length >= 2) {\n      // Use the start draw to handler to transition.\n      return new ScaleOrPanState().handleDrawStart(e, canvasDraw);\n    }\n    var clientPt = clientPointFromEvent(e);\n    _this5.deferredPoints.push(clientPt); // If we've already moved far enough, or if enough time has passed, give up\n    // and switch over to drawing.\n\n    if (new Date().valueOf() - _this5.startTimestamp < PINCH_TIMEOUT_MS) {\n      if (_this5.startClientPoint === null) {\n        _this5.startClientPoint = clientPt;\n      } // Note that we're using \"manhattan distance\" rather than computing a\n      // hypotenuse here as a cheap approximation\n\n      var d = Math.abs(clientPt.clientX - _this5.startClientPoint.clientX) + Math.abs(clientPt.clientY - _this5.startClientPoint.clientY);\n      if (d < TOUCH_SLOP) {\n        // We're not ready to give up yet.\n        return _this5;\n      }\n    } // Okay, give up and start drawing.\n\n    return _this5.issueDeferredPoints(canvasDraw);\n  });\n  _defineProperty(this, \"handleDrawEnd\", function (e, canvasDraw) {\n    // The user stopped drawing before we decided what to do. Just treat this as\n    // if they were drawing all along.\n    return _this5.issueDeferredPoints(canvasDraw).handleDrawEnd(e, canvasDraw);\n  });\n  _defineProperty(this, \"issueDeferredPoints\", function (canvasDraw) {\n    // Time to give up. Play our deferred points out to the drawing state.\n    // The first point will have been a start draw.\n    var nextState = new DrawingState();\n    for (var i = 0; i < _this5.deferredPoints.length; i++) {\n      var deferredPt = _this5.deferredPoints[i];\n      var syntheticEvt = new SyntheticEvent(deferredPt);\n      var func = i === 0 ? nextState.handleDrawStart : nextState.handleDrawMove;\n      nextState = func(syntheticEvt, canvasDraw);\n    }\n    return nextState;\n  });\n  this.startClientPoint = null;\n  this.startTimestamp = new Date().valueOf();\n  this.deferredPoints = [];\n};\n/**\r\n * This state is active when the user has added at least two touch points but we\r\n * don't yet know if they intend to pan or zoom.\r\n */\n\nexport var ScaleOrPanState = function ScaleOrPanState() {\n  var _this6 = this;\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\n    e.preventDefault();\n    if (!e.touches || e.touches.length < 2) {\n      return new DefaultState();\n    }\n    _this6.start = _this6.getTouchMetrics(e);\n    _this6.panStart = {\n      x: canvasDraw.coordSystem.x,\n      y: canvasDraw.coordSystem.y\n    };\n    _this6.scaleStart = canvasDraw.coordSystem.scale;\n    return _this6;\n  });\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    e.preventDefault();\n    if (!e.touches || e.touches.length < 2) {\n      return new DefaultState();\n    }\n    var _this6$recentMetrics = _this6.recentMetrics = _this6.getTouchMetrics(e),\n      centroid = _this6$recentMetrics.centroid,\n      distance = _this6$recentMetrics.distance; // Switch to scaling?\n\n    var dd = Math.abs(distance - _this6.start.distance);\n    if (dd >= TOUCH_SLOP) {\n      return new TouchScaleState(_this6).handleDrawMove(e, canvasDraw);\n    } // Switch to panning?\n\n    var dx = centroid.clientX - _this6.start.centroid.clientX;\n    var dy = centroid.clientY - _this6.start.centroid.clientY;\n    var dc = Math.abs(dx) + Math.abs(dy);\n    if (dc >= TOUCH_SLOP) {\n      return new TouchPanState(_this6).handleDrawMove(e, canvasDraw);\n    } // Not enough movement yet\n\n    return _this6;\n  });\n  _defineProperty(this, \"handleDrawEnd\", function () {\n    return new DefaultState();\n  });\n  _defineProperty(this, \"getTouchMetrics\", function (e) {\n    var _clientPointFromEvent2 = clientPointFromEvent(e.touches[0]),\n      t1x = _clientPointFromEvent2.clientX,\n      t1y = _clientPointFromEvent2.clientY;\n    var _clientPointFromEvent3 = clientPointFromEvent(e.touches[1]),\n      t2x = _clientPointFromEvent3.clientX,\n      t2y = _clientPointFromEvent3.clientY;\n    var dx = t2x - t1x;\n    var dy = t2y - t1y;\n    return {\n      t1: {\n        clientX: t1x,\n        clientY: t1y\n      },\n      t2: {\n        clientX: t2x,\n        clientY: t2y\n      },\n      distance: Math.sqrt(dx * dx + dy * dy),\n      centroid: {\n        clientX: (t1x + t2x) / 2.0,\n        clientY: (t1y + t2y) / 2.0\n      }\n    };\n  });\n};\n/**\r\n * The user is actively using touch gestures to pan the image.\r\n */\n\nexport var TouchPanState = function TouchPanState(scaleOrPanState) {\n  var _this7 = this;\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\n  _defineProperty(this, \"handleDrawStart\", function () {\n    return _this7;\n  });\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    e.preventDefault();\n    if (!e.touches || e.touches.length < 2) {\n      return new DefaultState();\n    }\n    var ref = _this7.scaleOrPanState;\n    var _ref$recentMetrics = ref.recentMetrics = ref.getTouchMetrics(e),\n      centroid = _ref$recentMetrics.centroid,\n      distance = _ref$recentMetrics.distance;\n    var dx = centroid.clientX - ref.start.centroid.clientX;\n    var dy = centroid.clientY - ref.start.centroid.clientY;\n    canvasDraw.setView({\n      x: ref.panStart.x + dx,\n      y: ref.panStart.y + dy\n    });\n    return _this7;\n  });\n  _defineProperty(this, \"handleDrawEnd\", function () {\n    return new DefaultState();\n  });\n  this.scaleOrPanState = scaleOrPanState;\n};\n/**\r\n * The user is actively using touch gestures to scale the drawing.\r\n */\n\nexport var TouchScaleState = function TouchScaleState(scaleOrPanState) {\n  var _this8 = this;\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\n  _defineProperty(this, \"handleDrawStart\", function () {\n    return _this8;\n  });\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    e.preventDefault();\n    if (!e.touches || e.touches.length < 2) {\n      return new DefaultState();\n    }\n    var ref = _this8.scaleOrPanState;\n    var _ref$recentMetrics2 = ref.recentMetrics = ref.getTouchMetrics(e),\n      centroid = _ref$recentMetrics2.centroid,\n      distance = _ref$recentMetrics2.distance;\n    var targetScale = ref.scaleStart * (distance / ref.start.distance);\n    var dScale = targetScale - canvasDraw.coordSystem.scale;\n    canvasDraw.coordSystem.scaleAtClientPoint(dScale, centroid);\n    return _this8;\n  });\n  _defineProperty(this, \"handleDrawEnd\", function () {\n    return new DefaultState();\n  });\n  this.scaleOrPanState = scaleOrPanState;\n};\n/**\r\n * This state is active when the user is drawing.\r\n */\n\nexport var DrawingState = function DrawingState() {\n  var _this9 = this;\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\n    e.preventDefault();\n    if (e.touches && e.touches.length) {\n      // on touch, set catenary position to touch pos\n      var _viewPointFromEvent2 = viewPointFromEvent(canvasDraw.coordSystem, e),\n        x = _viewPointFromEvent2.x,\n        y = _viewPointFromEvent2.y;\n      canvasDraw.lazy.update({\n        x: x,\n        y: y\n      }, {\n        both: true\n      });\n    }\n    return _this9.handleDrawMove(e, canvasDraw);\n  });\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    e.preventDefault();\n    var _viewPointFromEvent3 = viewPointFromEvent(canvasDraw.coordSystem, e),\n      x = _viewPointFromEvent3.x,\n      y = _viewPointFromEvent3.y;\n    canvasDraw.lazy.update({\n      x: x,\n      y: y\n    });\n    var isDisabled = !canvasDraw.lazy.isEnabled();\n    if (!_this9.isDrawing || isDisabled) {\n      // Start drawing and add point\n      canvasDraw.points.push(canvasDraw.clampPointToDocument(canvasDraw.lazy.brush.toObject()));\n      _this9.isDrawing = true;\n    } // Add new point\n\n    canvasDraw.points.push(canvasDraw.clampPointToDocument(canvasDraw.lazy.brush.toObject())); // Draw current points\n\n    canvasDraw.drawPoints({\n      points: canvasDraw.points,\n      brushColor: canvasDraw.props.brushColor,\n      brushRadius: canvasDraw.props.brushRadius\n    });\n    return _this9;\n  });\n  _defineProperty(this, \"handleDrawEnd\", function (e, canvasDraw) {\n    e.preventDefault(); // Draw to this end pos\n\n    _this9.handleDrawMove(e, canvasDraw);\n    canvasDraw.saveLine();\n    return new DefaultState();\n  });\n  this.isDrawing = false;\n};\nexport var SyntheticEvent = function SyntheticEvent(_ref) {\n  var clientX = _ref.clientX,\n    clientY = _ref.clientY;\n  _defineProperty(this, \"preventDefault\", function () {});\n  this.clientX = clientX;\n  this.clientY = clientY;\n  this.touches = [{\n    clientX: clientX,\n    clientY: clientY\n  }];\n};\nexport function clientPointFromEvent(e) {\n  // use cursor pos as default\n  var clientX = e.clientX;\n  var clientY = e.clientY; // use first touch if available\n\n  if (e.changedTouches && e.changedTouches.length > 0) {\n    clientX = e.changedTouches[0].clientX;\n    clientY = e.changedTouches[0].clientY;\n  }\n  return {\n    clientX: clientX,\n    clientY: clientY\n  };\n}\nexport function viewPointFromEvent(coordSystem, e) {\n  return coordSystem.clientPointToViewPoint(clientPointFromEvent(e));\n}","map":{"version":3,"names":["_this","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","TOUCH_SLOP","PINCH_TIMEOUT_MS","SUPPRESS_SCROLL","e","preventDefault","DefaultState","_this2","canvasDraw","_canvasDraw$props","props","disabled","enablePanAndZoom","mouseZoomFactor","DisabledState","ctrlKey","coordSystem","scaleAtClientPoint","deltaY","clientPointFromEvent","PanState","handleDrawStart","WaitForPinchState","_viewPointFromEvent","viewPointFromEvent","x","y","lazy","update","_this3","handleMouseWheel","handleDrawMove","handleDrawEnd","_this4","bind","dragStart","panStart","_clientPointFromEvent","clientX","clientY","dx","dy","setView","_this5","touches","length","DrawingState","ScaleOrPanState","clientPt","deferredPoints","push","Date","valueOf","startTimestamp","startClientPoint","d","Math","abs","issueDeferredPoints","nextState","i","deferredPt","syntheticEvt","SyntheticEvent","func","_this6","start","getTouchMetrics","scaleStart","scale","_this6$recentMetrics","recentMetrics","centroid","distance","dd","TouchScaleState","dc","TouchPanState","_clientPointFromEvent2","t1x","t1y","_clientPointFromEvent3","t2x","t2y","t1","t2","sqrt","scaleOrPanState","_this7","ref","_ref$recentMetrics","_this8","_ref$recentMetrics2","targetScale","dScale","_this9","_viewPointFromEvent2","both","_viewPointFromEvent3","isDisabled","isEnabled","isDrawing","points","clampPointToDocument","brush","toObject","drawPoints","brushColor","brushRadius","saveLine","_ref","changedTouches","clientPointToViewPoint"],"sources":["C:/Users/Sanjay Singh/Desktop/NewCanvas/frontend-app/node_modules/react-canvas-draw/es/interactionStateMachine.js"],"sourcesContent":["var _this = this;\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\nvar TOUCH_SLOP = 10;\r\nvar PINCH_TIMEOUT_MS = 250;\r\n\r\nvar SUPPRESS_SCROLL = function SUPPRESS_SCROLL(e) {\r\n  // No zooming while drawing, but we'll cancel the scroll event.\r\n  e.preventDefault();\r\n  return _this;\r\n};\r\n/**\r\n * The default state for the interaction state machine. Supports zoom and\r\n * initiating pan and drawing actions.\r\n */\r\n\r\n\r\nexport var DefaultState = function DefaultState() {\r\n  var _this2 = this;\r\n\r\n  _defineProperty(this, \"handleMouseWheel\", function (e, canvasDraw) {\r\n    var _canvasDraw$props = canvasDraw.props,\r\n        disabled = _canvasDraw$props.disabled,\r\n        enablePanAndZoom = _canvasDraw$props.enablePanAndZoom,\r\n        mouseZoomFactor = _canvasDraw$props.mouseZoomFactor;\r\n\r\n    if (disabled) {\r\n      return new DisabledState();\r\n    } else if (enablePanAndZoom && e.ctrlKey) {\r\n      e.preventDefault();\r\n      canvasDraw.coordSystem.scaleAtClientPoint(mouseZoomFactor * e.deltaY, clientPointFromEvent(e));\r\n    }\r\n\r\n    return _this2;\r\n  });\r\n\r\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\r\n    if (canvasDraw.props.disabled) {\r\n      return new DisabledState();\r\n    } else if (e.ctrlKey && canvasDraw.props.enablePanAndZoom) {\r\n      return new PanState().handleDrawStart(e, canvasDraw);\r\n    } else {\r\n      return new WaitForPinchState().handleDrawStart(e, canvasDraw);\r\n    }\r\n  });\r\n\r\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\r\n    if (canvasDraw.props.disabled) {\r\n      return new DisabledState();\r\n    } else {\r\n      var _viewPointFromEvent = viewPointFromEvent(canvasDraw.coordSystem, e),\r\n          x = _viewPointFromEvent.x,\r\n          y = _viewPointFromEvent.y;\r\n\r\n      canvasDraw.lazy.update({\r\n        x: x,\r\n        y: y\r\n      });\r\n      return _this2;\r\n    }\r\n  });\r\n\r\n  _defineProperty(this, \"handleDrawEnd\", function (e, canvasDraw) {\r\n    return canvasDraw.props.disabled ? new DisabledState() : _this2;\r\n  });\r\n};\r\n;\r\n/**\r\n * This state is used as long as the disabled prop is active. It ignores all\r\n * events and doesn't prevent default actions. The disabled state can only be\r\n * triggered from the default state (i.e., while no action is actively being\r\n * performed).\r\n */\r\n\r\nexport var DisabledState = function DisabledState() {\r\n  var _this3 = this;\r\n\r\n  _defineProperty(this, \"handleMouseWheel\", function (e, canvasDraw) {\r\n    if (canvasDraw.props.disabled) {\r\n      return _this3;\r\n    } else {\r\n      return new DefaultState().handleMouseWheel(e, canvasDraw);\r\n    }\r\n  });\r\n\r\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\r\n    if (canvasDraw.props.disabled) {\r\n      return _this3;\r\n    } else {\r\n      return new DefaultState().handleDrawStart(e, canvasDraw);\r\n    }\r\n  });\r\n\r\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\r\n    if (canvasDraw.props.disabled) {\r\n      return _this3;\r\n    } else {\r\n      return new DefaultState().handleDrawMove(e, canvasDraw);\r\n    }\r\n  });\r\n\r\n  _defineProperty(this, \"handleDrawEnd\", function (e, canvasDraw) {\r\n    if (canvasDraw.props.disabled) {\r\n      return _this3;\r\n    } else {\r\n      return new DefaultState().handleDrawEnd(e, canvasDraw);\r\n    }\r\n  });\r\n};\r\n/**\r\n * This state is active as long as the user is panning the image. This state is\r\n * retained until the pan ceases.\r\n */\r\n\r\nexport var PanState = function PanState() {\r\n  var _this4 = this;\r\n\r\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\r\n\r\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\r\n    e.preventDefault();\r\n    _this4.dragStart = clientPointFromEvent(e);\r\n    _this4.panStart = {\r\n      x: canvasDraw.coordSystem.x,\r\n      y: canvasDraw.coordSystem.y\r\n    };\r\n    return _this4;\r\n  });\r\n\r\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\r\n    e.preventDefault();\r\n\r\n    var _clientPointFromEvent = clientPointFromEvent(e),\r\n        clientX = _clientPointFromEvent.clientX,\r\n        clientY = _clientPointFromEvent.clientY;\r\n\r\n    var dx = clientX - _this4.dragStart.clientX;\r\n    var dy = clientY - _this4.dragStart.clientY;\r\n    canvasDraw.coordSystem.setView({\r\n      x: _this4.panStart.x + dx,\r\n      y: _this4.panStart.y + dy\r\n    });\r\n    return _this4;\r\n  });\r\n\r\n  _defineProperty(this, \"handleDrawEnd\", function () {\r\n    return new DefaultState();\r\n  });\r\n};\r\n/**\r\n * This state is active when the user has initiated the drawing action but has\r\n * not yet created any lines. We use this state to try and detect a second touch\r\n * event to initiate a pinch-zoom action. We'll give up on that if enough time\r\n * or movement happens without a second touch.\r\n */\r\n\r\nexport var WaitForPinchState = function WaitForPinchState() {\r\n  var _this5 = this;\r\n\r\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\r\n\r\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\r\n    var enablePanAndZoom = canvasDraw.props.enablePanAndZoom;\r\n    e.preventDefault(); // We're going to transition immediately into lazy-drawing mode if\r\n    // pan-and-zoom isn't enabled or if this event wasn't triggered by a touch.\r\n\r\n    if (!e.touches || !e.touches.length || !enablePanAndZoom) {\r\n      return new DrawingState().handleDrawStart(e, canvasDraw);\r\n    } // If we already have two touch events, we can move straight into pinch/pan\r\n\r\n\r\n    if (enablePanAndZoom && e.touches && e.touches.length >= 2) {\r\n      return new ScaleOrPanState().handleDrawStart(e, canvasDraw);\r\n    }\r\n\r\n    return _this5.handleDrawMove(e, canvasDraw);\r\n  });\r\n\r\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\r\n    e.preventDefault(); // If we have two touches, move to pinch/pan (we don't have to recheck\r\n    // whether zoom is enabled because that happend in draw start).\r\n\r\n    if (e.touches && e.touches.length >= 2) {\r\n      // Use the start draw to handler to transition.\r\n      return new ScaleOrPanState().handleDrawStart(e, canvasDraw);\r\n    }\r\n\r\n    var clientPt = clientPointFromEvent(e);\r\n\r\n    _this5.deferredPoints.push(clientPt); // If we've already moved far enough, or if enough time has passed, give up\r\n    // and switch over to drawing.\r\n\r\n\r\n    if (new Date().valueOf() - _this5.startTimestamp < PINCH_TIMEOUT_MS) {\r\n      if (_this5.startClientPoint === null) {\r\n        _this5.startClientPoint = clientPt;\r\n      } // Note that we're using \"manhattan distance\" rather than computing a\r\n      // hypotenuse here as a cheap approximation\r\n\r\n\r\n      var d = Math.abs(clientPt.clientX - _this5.startClientPoint.clientX) + Math.abs(clientPt.clientY - _this5.startClientPoint.clientY);\r\n\r\n      if (d < TOUCH_SLOP) {\r\n        // We're not ready to give up yet.\r\n        return _this5;\r\n      }\r\n    } // Okay, give up and start drawing.\r\n\r\n\r\n    return _this5.issueDeferredPoints(canvasDraw);\r\n  });\r\n\r\n  _defineProperty(this, \"handleDrawEnd\", function (e, canvasDraw) {\r\n    // The user stopped drawing before we decided what to do. Just treat this as\r\n    // if they were drawing all along.\r\n    return _this5.issueDeferredPoints(canvasDraw).handleDrawEnd(e, canvasDraw);\r\n  });\r\n\r\n  _defineProperty(this, \"issueDeferredPoints\", function (canvasDraw) {\r\n    // Time to give up. Play our deferred points out to the drawing state.\r\n    // The first point will have been a start draw.\r\n    var nextState = new DrawingState();\r\n\r\n    for (var i = 0; i < _this5.deferredPoints.length; i++) {\r\n      var deferredPt = _this5.deferredPoints[i];\r\n      var syntheticEvt = new SyntheticEvent(deferredPt);\r\n      var func = i === 0 ? nextState.handleDrawStart : nextState.handleDrawMove;\r\n      nextState = func(syntheticEvt, canvasDraw);\r\n    }\r\n\r\n    return nextState;\r\n  });\r\n\r\n  this.startClientPoint = null;\r\n  this.startTimestamp = new Date().valueOf();\r\n  this.deferredPoints = [];\r\n};\r\n/**\r\n * This state is active when the user has added at least two touch points but we\r\n * don't yet know if they intend to pan or zoom.\r\n */\r\n\r\nexport var ScaleOrPanState = function ScaleOrPanState() {\r\n  var _this6 = this;\r\n\r\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\r\n\r\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\r\n    e.preventDefault();\r\n\r\n    if (!e.touches || e.touches.length < 2) {\r\n      return new DefaultState();\r\n    }\r\n\r\n    _this6.start = _this6.getTouchMetrics(e);\r\n    _this6.panStart = {\r\n      x: canvasDraw.coordSystem.x,\r\n      y: canvasDraw.coordSystem.y\r\n    };\r\n    _this6.scaleStart = canvasDraw.coordSystem.scale;\r\n    return _this6;\r\n  });\r\n\r\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\r\n    e.preventDefault();\r\n\r\n    if (!e.touches || e.touches.length < 2) {\r\n      return new DefaultState();\r\n    }\r\n\r\n    var _this6$recentMetrics = _this6.recentMetrics = _this6.getTouchMetrics(e),\r\n        centroid = _this6$recentMetrics.centroid,\r\n        distance = _this6$recentMetrics.distance; // Switch to scaling?\r\n\r\n\r\n    var dd = Math.abs(distance - _this6.start.distance);\r\n\r\n    if (dd >= TOUCH_SLOP) {\r\n      return new TouchScaleState(_this6).handleDrawMove(e, canvasDraw);\r\n    } // Switch to panning?\r\n\r\n\r\n    var dx = centroid.clientX - _this6.start.centroid.clientX;\r\n    var dy = centroid.clientY - _this6.start.centroid.clientY;\r\n    var dc = Math.abs(dx) + Math.abs(dy);\r\n\r\n    if (dc >= TOUCH_SLOP) {\r\n      return new TouchPanState(_this6).handleDrawMove(e, canvasDraw);\r\n    } // Not enough movement yet\r\n\r\n\r\n    return _this6;\r\n  });\r\n\r\n  _defineProperty(this, \"handleDrawEnd\", function () {\r\n    return new DefaultState();\r\n  });\r\n\r\n  _defineProperty(this, \"getTouchMetrics\", function (e) {\r\n    var _clientPointFromEvent2 = clientPointFromEvent(e.touches[0]),\r\n        t1x = _clientPointFromEvent2.clientX,\r\n        t1y = _clientPointFromEvent2.clientY;\r\n\r\n    var _clientPointFromEvent3 = clientPointFromEvent(e.touches[1]),\r\n        t2x = _clientPointFromEvent3.clientX,\r\n        t2y = _clientPointFromEvent3.clientY;\r\n\r\n    var dx = t2x - t1x;\r\n    var dy = t2y - t1y;\r\n    return {\r\n      t1: {\r\n        clientX: t1x,\r\n        clientY: t1y\r\n      },\r\n      t2: {\r\n        clientX: t2x,\r\n        clientY: t2y\r\n      },\r\n      distance: Math.sqrt(dx * dx + dy * dy),\r\n      centroid: {\r\n        clientX: (t1x + t2x) / 2.0,\r\n        clientY: (t1y + t2y) / 2.0\r\n      }\r\n    };\r\n  });\r\n};\r\n/**\r\n * The user is actively using touch gestures to pan the image.\r\n */\r\n\r\nexport var TouchPanState = function TouchPanState(scaleOrPanState) {\r\n  var _this7 = this;\r\n\r\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\r\n\r\n  _defineProperty(this, \"handleDrawStart\", function () {\r\n    return _this7;\r\n  });\r\n\r\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\r\n    e.preventDefault();\r\n\r\n    if (!e.touches || e.touches.length < 2) {\r\n      return new DefaultState();\r\n    }\r\n\r\n    var ref = _this7.scaleOrPanState;\r\n\r\n    var _ref$recentMetrics = ref.recentMetrics = ref.getTouchMetrics(e),\r\n        centroid = _ref$recentMetrics.centroid,\r\n        distance = _ref$recentMetrics.distance;\r\n\r\n    var dx = centroid.clientX - ref.start.centroid.clientX;\r\n    var dy = centroid.clientY - ref.start.centroid.clientY;\r\n    canvasDraw.setView({\r\n      x: ref.panStart.x + dx,\r\n      y: ref.panStart.y + dy\r\n    });\r\n    return _this7;\r\n  });\r\n\r\n  _defineProperty(this, \"handleDrawEnd\", function () {\r\n    return new DefaultState();\r\n  });\r\n\r\n  this.scaleOrPanState = scaleOrPanState;\r\n};\r\n/**\r\n * The user is actively using touch gestures to scale the drawing.\r\n */\r\n\r\nexport var TouchScaleState = function TouchScaleState(scaleOrPanState) {\r\n  var _this8 = this;\r\n\r\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\r\n\r\n  _defineProperty(this, \"handleDrawStart\", function () {\r\n    return _this8;\r\n  });\r\n\r\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\r\n    e.preventDefault();\r\n\r\n    if (!e.touches || e.touches.length < 2) {\r\n      return new DefaultState();\r\n    }\r\n\r\n    var ref = _this8.scaleOrPanState;\r\n\r\n    var _ref$recentMetrics2 = ref.recentMetrics = ref.getTouchMetrics(e),\r\n        centroid = _ref$recentMetrics2.centroid,\r\n        distance = _ref$recentMetrics2.distance;\r\n\r\n    var targetScale = ref.scaleStart * (distance / ref.start.distance);\r\n    var dScale = targetScale - canvasDraw.coordSystem.scale;\r\n    canvasDraw.coordSystem.scaleAtClientPoint(dScale, centroid);\r\n    return _this8;\r\n  });\r\n\r\n  _defineProperty(this, \"handleDrawEnd\", function () {\r\n    return new DefaultState();\r\n  });\r\n\r\n  this.scaleOrPanState = scaleOrPanState;\r\n};\r\n/**\r\n * This state is active when the user is drawing.\r\n */\r\n\r\nexport var DrawingState = function DrawingState() {\r\n  var _this9 = this;\r\n\r\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\r\n\r\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\r\n    e.preventDefault();\r\n\r\n    if (e.touches && e.touches.length) {\r\n      // on touch, set catenary position to touch pos\r\n      var _viewPointFromEvent2 = viewPointFromEvent(canvasDraw.coordSystem, e),\r\n          x = _viewPointFromEvent2.x,\r\n          y = _viewPointFromEvent2.y;\r\n\r\n      canvasDraw.lazy.update({\r\n        x: x,\r\n        y: y\r\n      }, {\r\n        both: true\r\n      });\r\n    }\r\n\r\n    return _this9.handleDrawMove(e, canvasDraw);\r\n  });\r\n\r\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\r\n    e.preventDefault();\r\n\r\n    var _viewPointFromEvent3 = viewPointFromEvent(canvasDraw.coordSystem, e),\r\n        x = _viewPointFromEvent3.x,\r\n        y = _viewPointFromEvent3.y;\r\n\r\n    canvasDraw.lazy.update({\r\n      x: x,\r\n      y: y\r\n    });\r\n    var isDisabled = !canvasDraw.lazy.isEnabled();\r\n\r\n    if (!_this9.isDrawing || isDisabled) {\r\n      // Start drawing and add point\r\n      canvasDraw.points.push(canvasDraw.clampPointToDocument(canvasDraw.lazy.brush.toObject()));\r\n      _this9.isDrawing = true;\r\n    } // Add new point\r\n\r\n\r\n    canvasDraw.points.push(canvasDraw.clampPointToDocument(canvasDraw.lazy.brush.toObject())); // Draw current points\r\n\r\n    canvasDraw.drawPoints({\r\n      points: canvasDraw.points,\r\n      brushColor: canvasDraw.props.brushColor,\r\n      brushRadius: canvasDraw.props.brushRadius\r\n    });\r\n    return _this9;\r\n  });\r\n\r\n  _defineProperty(this, \"handleDrawEnd\", function (e, canvasDraw) {\r\n    e.preventDefault(); // Draw to this end pos\r\n\r\n    _this9.handleDrawMove(e, canvasDraw);\r\n\r\n    canvasDraw.saveLine();\r\n    return new DefaultState();\r\n  });\r\n\r\n  this.isDrawing = false;\r\n};\r\nexport var SyntheticEvent = function SyntheticEvent(_ref) {\r\n  var clientX = _ref.clientX,\r\n      clientY = _ref.clientY;\r\n\r\n  _defineProperty(this, \"preventDefault\", function () {});\r\n\r\n  this.clientX = clientX;\r\n  this.clientY = clientY;\r\n  this.touches = [{\r\n    clientX: clientX,\r\n    clientY: clientY\r\n  }];\r\n};\r\nexport function clientPointFromEvent(e) {\r\n  // use cursor pos as default\r\n  var clientX = e.clientX;\r\n  var clientY = e.clientY; // use first touch if available\r\n\r\n  if (e.changedTouches && e.changedTouches.length > 0) {\r\n    clientX = e.changedTouches[0].clientX;\r\n    clientY = e.changedTouches[0].clientY;\r\n  }\r\n\r\n  return {\r\n    clientX: clientX,\r\n    clientY: clientY\r\n  };\r\n}\r\nexport function viewPointFromEvent(coordSystem, e) {\r\n  return coordSystem.clientPointToViewPoint(clientPointFromEvent(e));\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}