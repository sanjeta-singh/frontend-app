{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\r\n * @type {ViewPoint}\r\n */\nvar NULL_VIEW_POINT = Object.freeze({\n  x: 0,\n  y: 0,\n  untransformedX: 0,\n  untransformedY: 0\n});\n/**\r\n * @type {CanvasBounds}\r\n */\n\nvar NULL_BOUNDS = Object.freeze({\n  canvasWidth: 0,\n  canvasHeight: 0,\n  left: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  viewMin: NULL_VIEW_POINT,\n  viewMax: NULL_VIEW_POINT\n});\n/**\r\n * The identity matrix (a transform that results in view coordinates that are\r\n * identical to relative client coordinates).\r\n * @type {Matrix}\r\n */\n\nexport var IDENTITY = Object.freeze({\n  a: 1,\n  b: 0,\n  c: 0,\n  d: 1,\n  e: 0,\n  f: 0\n});\nfunction valueOrDefault(value, defaultValue) {\n  if (value === null || typeof value === \"undefined\") {\n    return defaultValue;\n  } else {\n    return value;\n  }\n}\n/**\r\n * Facilitates calculation and manipulation of a zoom-and-pannable view within a\r\n * canvas.\r\n */\n\nvar CoordinateSystem = /*#__PURE__*/function () {\n  /**\r\n   * @typedef Extents\r\n   * @property {number} min the minimal value in the range\r\n   * @property {number} max the maximal value in the range\r\n   */\n\n  /**\r\n   * @typedef Size\r\n   * @property {number} width the span of the element's horizontal axis\r\n   * @property {number} height the span of the element's vertical axis\r\n   */\n\n  /**\r\n   * @param {Object} parameters the initialization parameters for this instance.\r\n   * @param {Extents} parameters.scaleExtents the minimum and maximum allowable scale factor.\r\n   * @param {Sizee} parameters.documentSize the width and height of the document, in client space.\r\n   */\n  function CoordinateSystem(_ref) {\n    var _this = this;\n    var scaleExtents = _ref.scaleExtents,\n      documentSize = _ref.documentSize;\n    _defineProperty(this, \"_scaleExtents\", void 0);\n    _defineProperty(this, \"_documentSize\", void 0);\n    _defineProperty(this, \"_canvas\", null);\n    _defineProperty(this, \"_view\", {\n      scale: 1.0,\n      x: 0,\n      y: 0\n    });\n    _defineProperty(this, \"_viewChangeListeners\", new Set());\n    _defineProperty(this, \"setScale\", function (scale) {\n      _this.setView({\n        scale: scale\n      });\n    });\n    _defineProperty(this, \"clampView\", function (_ref2) {\n      var scale = _ref2.scale,\n        x = _ref2.x,\n        y = _ref2.y;\n      var _this$scaleExtents = _this.scaleExtents,\n        min = _this$scaleExtents.min,\n        max = _this$scaleExtents.max;\n      var _this$documentSize = _this.documentSize,\n        width = _this$documentSize.width,\n        height = _this$documentSize.height;\n      var _ref3 = _this.canvasRect || NULL_BOUNDS,\n        left = _ref3.left,\n        top = _ref3.top,\n        right = _ref3.right,\n        bottom = _ref3.bottom;\n      var canvasWidth = right - left;\n      var canvasHeight = bottom - top;\n      var maxx = canvasWidth / 2;\n      var minx = -(width * _this._view.scale - canvasWidth / 2);\n      var maxy = canvasHeight / 2;\n      var miny = -(height * _this._view.scale - canvasHeight / 2); // Clamp values to acceptible range.\n\n      return {\n        scale: Math.min(Math.max(scale, min), max),\n        x: Math.min(Math.max(x, minx), maxx),\n        y: Math.min(Math.max(y, miny), maxy)\n      };\n    });\n    _defineProperty(this, \"resetView\", function () {\n      _this.setView({\n        scale: 1.0,\n        x: 0,\n        y: 0\n      });\n    });\n    _defineProperty(this, \"setView\", function (view) {\n      var newView = _this.clampView(_extends({}, _this._view, view || {}));\n      var _this$_view = _this._view,\n        scale = _this$_view.scale,\n        x = _this$_view.x,\n        y = _this$_view.y; // Only trigger if the view actually changed.\n\n      if (newView.scale !== scale || newView.x !== x || newView.y !== y) {\n        _this._view = newView;\n        _this._viewChangeListeners.forEach(function (listener) {\n          return listener && listener(newView);\n        });\n      }\n      return _extends({}, _this._view);\n    });\n    _defineProperty(this, \"scaleAtClientPoint\", function (deltaScale, clientPoint) {\n      var viewPt = _this.clientPointToViewPoint(clientPoint);\n      var newView = _this.clampView(_extends({}, _this._view, {\n        scale: _this._view.scale + deltaScale\n      }));\n      var clientPtPostScale = _this.viewPointToClientPoint(viewPt, newView);\n      newView.x = _this._view.x - (clientPtPostScale.clientX - clientPoint.clientX);\n      newView.y = _this._view.y - (clientPtPostScale.clientY - clientPoint.clientY);\n      return _this.setView(newView);\n    });\n    _defineProperty(this, \"clientPointToViewPoint\", function (_ref4, view) {\n      var clientX = _ref4.clientX,\n        clientY = _ref4.clientY;\n      if (view === void 0) {\n        view = _this._view;\n      }\n      var _ref5 = _this.canvasRect || NULL_BOUNDS,\n        left = _ref5.left,\n        top = _ref5.top;\n      var relativeClientX = clientX - left;\n      var relativeClientY = clientY - top;\n      return {\n        x: (relativeClientX - view.x) / view.scale,\n        y: (relativeClientY - view.y) / view.scale,\n        relativeClientX: relativeClientX,\n        relativeClientY: relativeClientY\n      };\n    });\n    _defineProperty(this, \"viewPointToClientPoint\", function (_ref6, view) {\n      var x = _ref6.x,\n        y = _ref6.y;\n      if (view === void 0) {\n        view = _this._view;\n      }\n      var _ref7 = _this.canvasRect || NULL_BOUNDS,\n        left = _ref7.left,\n        top = _ref7.top;\n      var relativeX = x * view.scale + view.x;\n      var relativeY = y * view.scale + view.y;\n      var clientX = relativeX + left;\n      var clientY = relativeY + top;\n      return {\n        clientX: clientX,\n        clientY: clientY,\n        relativeX: relativeX,\n        relativeY: relativeY,\n        x: clientX,\n        y: clientY\n      };\n    });\n    _defineProperty(this, \"attachViewChangeListener\", function (listener) {\n      _this._viewChangeListeners.add(listener);\n    });\n    this._scaleExtents = scaleExtents;\n    this._documentSize = documentSize;\n  }\n  /**\r\n   * @type {Extents}\r\n   */\n\n  _createClass(CoordinateSystem, [{\n    key: \"canvas\",\n    /**\r\n     * @returns {Canvas} the canvas currently associated with this instance.\r\n     */\n    get: function get() {\n      return this._canvas;\n    }\n    /**\r\n     * Updates the canvas for this coordinate system and recalculates the view.\r\n     * @param {Canvas} canvas the new canvas to associate with this instance.\r\n     */,\n\n    set: function set(canvas) {\n      this._canvas = canvas;\n      this.setView();\n    }\n    /**\r\n     * @returns {number} the current zoom factor\r\n     */\n  }, {\n    key: \"scale\",\n    get: function get() {\n      return this._view.scale;\n    }\n    /**\r\n     * Sets the zoom factor (clamped by the scale extents) and updates the view.\r\n     * @param {number} the new zoom factor\r\n     */\n  }, {\n    key: \"x\",\n    /**\r\n     * @returns {number} the horizontal component of the current pan offset\r\n     */\n    get: function get() {\n      return this._view.x;\n    }\n    /**\r\n     * Sets the horizontal pan offset (clamped by the document extents) and\r\n     * updates the view.\r\n     * @param {number} x the new offset\r\n     */,\n\n    set: function set(x) {\n      this.setView({\n        x: x\n      });\n    }\n    /**\r\n     * @retruns {number} the vertical component of the current pan offset\r\n     */\n  }, {\n    key: \"y\",\n    get: function get() {\n      return this._view.y;\n    }\n    /**\r\n     * Sets the vertical pan offset (clamped by the document extents) and\r\n     * updates the view.\r\n     * @param {number} y the new offset\r\n     */,\n\n    set: function set(y) {\n      this.setView({\n        y: y\n      });\n    }\n    /**\r\n     * @returns {View} a copy of this instance's current view state.\r\n     */\n  }, {\n    key: \"view\",\n    get: function get() {\n      return _extends({}, this._view);\n    }\n    /**\r\n     * @returns {Extents} a copy of the scale extents currently applied to this\r\n     * instance.\r\n     */\n  }, {\n    key: \"scaleExtents\",\n    get: function get() {\n      return _extends({}, this._scaleExtents);\n    }\n    /**\r\n     * Updates the minimum and maximum scale and resets the view transform if it\r\n     * is outside the new extents.\r\n     * @param {Extents} extents the new scale extents.\r\n     */,\n\n    set: function set(_ref8) {\n      var min = _ref8.min,\n        max = _ref8.max;\n      this._scaleExtents = {\n        min: min,\n        max: max\n      };\n      this.setView();\n    }\n    /**\r\n     * @returns {Size} the current document size (used to constrain the pan\r\n     * offset).\r\n     */\n  }, {\n    key: \"documentSize\",\n    get: function get() {\n      return _extends({}, this._documentSize);\n    }\n    /**\r\n     * Sets the document size and recalculates the view if it is outside the new\r\n     * bounds.\r\n     * @param {Size} size the new document size.\r\n     */,\n\n    set: function set(_ref9) {\n      var width = _ref9.width,\n        height = _ref9.height;\n      this._documentSize = {\n        width: width,\n        height: height\n      };\n      this.setView();\n    }\n    /**\r\n     * A view matrix expressing a series of transformations.\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setTransform\r\n     * @typedef Matrix\r\n     * @property {number} a horizontal scaling factor (1 == unscaled)\r\n     * @property {number} b vertical skewing factor (0 == unskewed)\r\n     * @property {number} c horizontal skewing factor (0 == unskewed)\r\n     * @property {number} d vertical scaling factor (1 == unscaled)\r\n     * @property {number} e horizontal translation (0 == untranslated)\r\n     * @property {number} f vertical translation (0 == untranslated)\r\n     */\n\n    /**\r\n     * @returns {Matrix} this coordinate system's current transformation matrix\r\n     */\n  }, {\n    key: \"transformMatrix\",\n    get: function get() {\n      //\n      return {\n        a: this._view.scale,\n        // horizontal scaling\n        b: 0,\n        // vertical skewing\n        c: 0,\n        // horizontal skewing\n        d: this._view.scale,\n        // vertical scaling\n        e: this._view.x,\n        f: this._view.y\n      };\n    }\n    /**\r\n     * An object expressing the bounds of a canvas object in terms of the\r\n     * coordinate system.\r\n     * @typedef CanvasBounds\r\n     * @property {number} left the left edge of the canvas in client space\r\n     * @property {number} right the right edge of the canvas in client space\r\n     * @property {number} top the top edge of the canvas in client space\r\n     * @property {number} bottom the bottom edge of the canvas in client space\r\n     * @property {number} canvasWidth the width of the canvas in client space\r\n     * @property {number} canvasHeight the height of the canvas in client space\r\n     * @property {ViewPoint} viewMin the top-left corner of the canvas in view space\r\n     * @property {ViewPoint} viewMax the bottom-right corner of the canvas in view space\r\n     */\n\n    /**\r\n     * @returns {CanvasBounds | undefined} the boundaries of the canvas linked to\r\n     * this coordinate system, or undefined if no canvas is set.\r\n     */\n  }, {\n    key: \"canvasBounds\",\n    get: function get() {\n      if (this._canvas) {\n        var _this$_canvas$getBoun = this._canvas.getBoundingClientRect(),\n          left = _this$_canvas$getBoun.left,\n          top = _this$_canvas$getBoun.top,\n          right = _this$_canvas$getBoun.right,\n          bottom = _this$_canvas$getBoun.bottom;\n        return {\n          viewMin: this.clientPointToViewPoint({\n            clientX: left,\n            clientY: top\n          }),\n          viewMax: this.clientPointToViewPoint({\n            clientX: right,\n            clientY: bottom\n          }),\n          left: left,\n          top: top,\n          right: right,\n          bottom: bottom,\n          canvasWidth: this._canvas.width,\n          canvasHeight: this._canvas.height\n        };\n      } else {\n        return undefined;\n      }\n    }\n    /**\r\n     * @private\r\n     * @return {{left: number, top: number} | undefined}\r\n     */\n  }, {\n    key: \"canvasRect\",\n    get: function get() {\n      if (this.canvas) {\n        return this.canvas.getBoundingClientRect();\n      } else {\n        return undefined;\n      }\n    }\n    /**\r\n     * Calculates a variant of the given view clamped according to the scale and\r\n     * document bounds. Does not modify this instance.\r\n     * @param {View} view the view constraints to clamp.\r\n     * @returns {View} a new view object representing the constrained input.\r\n     */\n  }]);\n  return CoordinateSystem;\n}();\nexport { CoordinateSystem as default };","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","Constructor","protoProps","staticProps","_defineProperty","obj","value","NULL_VIEW_POINT","freeze","x","y","untransformedX","untransformedY","NULL_BOUNDS","canvasWidth","canvasHeight","left","top","right","bottom","viewMin","viewMax","IDENTITY","a","b","c","d","e","f","valueOrDefault","defaultValue","CoordinateSystem","_ref","_this","scaleExtents","documentSize","scale","Set","setView","_ref2","_this$scaleExtents","min","max","_this$documentSize","width","height","_ref3","canvasRect","maxx","minx","_view","maxy","miny","Math","view","newView","clampView","_this$_view","_viewChangeListeners","forEach","listener","deltaScale","clientPoint","viewPt","clientPointToViewPoint","clientPtPostScale","viewPointToClientPoint","clientX","clientY","_ref4","_ref5","relativeClientX","relativeClientY","_ref6","_ref7","relativeX","relativeY","add","_scaleExtents","_documentSize","get","_canvas","set","canvas","_ref8","_ref9","_this$_canvas$getBoun","getBoundingClientRect","undefined","default"],"sources":["C:/Users/Sanjay Singh/Downloads/NewCanvas/frontend-app/node_modules/react-canvas-draw/es/coordinateSystem.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n/**\r\n * @type {ViewPoint}\r\n */\r\nvar NULL_VIEW_POINT = Object.freeze({\r\n  x: 0,\r\n  y: 0,\r\n  untransformedX: 0,\r\n  untransformedY: 0\r\n});\r\n/**\r\n * @type {CanvasBounds}\r\n */\r\n\r\nvar NULL_BOUNDS = Object.freeze({\r\n  canvasWidth: 0,\r\n  canvasHeight: 0,\r\n  left: 0,\r\n  top: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  viewMin: NULL_VIEW_POINT,\r\n  viewMax: NULL_VIEW_POINT\r\n});\r\n/**\r\n * The identity matrix (a transform that results in view coordinates that are\r\n * identical to relative client coordinates).\r\n * @type {Matrix}\r\n */\r\n\r\nexport var IDENTITY = Object.freeze({\r\n  a: 1,\r\n  b: 0,\r\n  c: 0,\r\n  d: 1,\r\n  e: 0,\r\n  f: 0\r\n});\r\n\r\nfunction valueOrDefault(value, defaultValue) {\r\n  if (value === null || typeof value === \"undefined\") {\r\n    return defaultValue;\r\n  } else {\r\n    return value;\r\n  }\r\n}\r\n/**\r\n * Facilitates calculation and manipulation of a zoom-and-pannable view within a\r\n * canvas.\r\n */\r\n\r\n\r\nvar CoordinateSystem = /*#__PURE__*/function () {\r\n  /**\r\n   * @typedef Extents\r\n   * @property {number} min the minimal value in the range\r\n   * @property {number} max the maximal value in the range\r\n   */\r\n\r\n  /**\r\n   * @typedef Size\r\n   * @property {number} width the span of the element's horizontal axis\r\n   * @property {number} height the span of the element's vertical axis\r\n   */\r\n\r\n  /**\r\n   * @param {Object} parameters the initialization parameters for this instance.\r\n   * @param {Extents} parameters.scaleExtents the minimum and maximum allowable scale factor.\r\n   * @param {Sizee} parameters.documentSize the width and height of the document, in client space.\r\n   */\r\n  function CoordinateSystem(_ref) {\r\n    var _this = this;\r\n\r\n    var scaleExtents = _ref.scaleExtents,\r\n        documentSize = _ref.documentSize;\r\n\r\n    _defineProperty(this, \"_scaleExtents\", void 0);\r\n\r\n    _defineProperty(this, \"_documentSize\", void 0);\r\n\r\n    _defineProperty(this, \"_canvas\", null);\r\n\r\n    _defineProperty(this, \"_view\", {\r\n      scale: 1.0,\r\n      x: 0,\r\n      y: 0\r\n    });\r\n\r\n    _defineProperty(this, \"_viewChangeListeners\", new Set());\r\n\r\n    _defineProperty(this, \"setScale\", function (scale) {\r\n      _this.setView({\r\n        scale: scale\r\n      });\r\n    });\r\n\r\n    _defineProperty(this, \"clampView\", function (_ref2) {\r\n      var scale = _ref2.scale,\r\n          x = _ref2.x,\r\n          y = _ref2.y;\r\n      var _this$scaleExtents = _this.scaleExtents,\r\n          min = _this$scaleExtents.min,\r\n          max = _this$scaleExtents.max;\r\n      var _this$documentSize = _this.documentSize,\r\n          width = _this$documentSize.width,\r\n          height = _this$documentSize.height;\r\n\r\n      var _ref3 = _this.canvasRect || NULL_BOUNDS,\r\n          left = _ref3.left,\r\n          top = _ref3.top,\r\n          right = _ref3.right,\r\n          bottom = _ref3.bottom;\r\n\r\n      var canvasWidth = right - left;\r\n      var canvasHeight = bottom - top;\r\n      var maxx = canvasWidth / 2;\r\n      var minx = -(width * _this._view.scale - canvasWidth / 2);\r\n      var maxy = canvasHeight / 2;\r\n      var miny = -(height * _this._view.scale - canvasHeight / 2); // Clamp values to acceptible range.\r\n\r\n      return {\r\n        scale: Math.min(Math.max(scale, min), max),\r\n        x: Math.min(Math.max(x, minx), maxx),\r\n        y: Math.min(Math.max(y, miny), maxy)\r\n      };\r\n    });\r\n\r\n    _defineProperty(this, \"resetView\", function () {\r\n      _this.setView({\r\n        scale: 1.0,\r\n        x: 0,\r\n        y: 0\r\n      });\r\n    });\r\n\r\n    _defineProperty(this, \"setView\", function (view) {\r\n      var newView = _this.clampView(_extends({}, _this._view, view || {}));\r\n\r\n      var _this$_view = _this._view,\r\n          scale = _this$_view.scale,\r\n          x = _this$_view.x,\r\n          y = _this$_view.y; // Only trigger if the view actually changed.\r\n\r\n      if (newView.scale !== scale || newView.x !== x || newView.y !== y) {\r\n        _this._view = newView;\r\n\r\n        _this._viewChangeListeners.forEach(function (listener) {\r\n          return listener && listener(newView);\r\n        });\r\n      }\r\n\r\n      return _extends({}, _this._view);\r\n    });\r\n\r\n    _defineProperty(this, \"scaleAtClientPoint\", function (deltaScale, clientPoint) {\r\n      var viewPt = _this.clientPointToViewPoint(clientPoint);\r\n\r\n      var newView = _this.clampView(_extends({}, _this._view, {\r\n        scale: _this._view.scale + deltaScale\r\n      }));\r\n\r\n      var clientPtPostScale = _this.viewPointToClientPoint(viewPt, newView);\r\n\r\n      newView.x = _this._view.x - (clientPtPostScale.clientX - clientPoint.clientX);\r\n      newView.y = _this._view.y - (clientPtPostScale.clientY - clientPoint.clientY);\r\n      return _this.setView(newView);\r\n    });\r\n\r\n    _defineProperty(this, \"clientPointToViewPoint\", function (_ref4, view) {\r\n      var clientX = _ref4.clientX,\r\n          clientY = _ref4.clientY;\r\n\r\n      if (view === void 0) {\r\n        view = _this._view;\r\n      }\r\n\r\n      var _ref5 = _this.canvasRect || NULL_BOUNDS,\r\n          left = _ref5.left,\r\n          top = _ref5.top;\r\n\r\n      var relativeClientX = clientX - left;\r\n      var relativeClientY = clientY - top;\r\n      return {\r\n        x: (relativeClientX - view.x) / view.scale,\r\n        y: (relativeClientY - view.y) / view.scale,\r\n        relativeClientX: relativeClientX,\r\n        relativeClientY: relativeClientY\r\n      };\r\n    });\r\n\r\n    _defineProperty(this, \"viewPointToClientPoint\", function (_ref6, view) {\r\n      var x = _ref6.x,\r\n          y = _ref6.y;\r\n\r\n      if (view === void 0) {\r\n        view = _this._view;\r\n      }\r\n\r\n      var _ref7 = _this.canvasRect || NULL_BOUNDS,\r\n          left = _ref7.left,\r\n          top = _ref7.top;\r\n\r\n      var relativeX = x * view.scale + view.x;\r\n      var relativeY = y * view.scale + view.y;\r\n      var clientX = relativeX + left;\r\n      var clientY = relativeY + top;\r\n      return {\r\n        clientX: clientX,\r\n        clientY: clientY,\r\n        relativeX: relativeX,\r\n        relativeY: relativeY,\r\n        x: clientX,\r\n        y: clientY\r\n      };\r\n    });\r\n\r\n    _defineProperty(this, \"attachViewChangeListener\", function (listener) {\r\n      _this._viewChangeListeners.add(listener);\r\n    });\r\n\r\n    this._scaleExtents = scaleExtents;\r\n    this._documentSize = documentSize;\r\n  }\r\n  /**\r\n   * @type {Extents}\r\n   */\r\n\r\n\r\n  _createClass(CoordinateSystem, [{\r\n    key: \"canvas\",\r\n\r\n    /**\r\n     * @returns {Canvas} the canvas currently associated with this instance.\r\n     */\r\n    get: function get() {\r\n      return this._canvas;\r\n    }\r\n    /**\r\n     * Updates the canvas for this coordinate system and recalculates the view.\r\n     * @param {Canvas} canvas the new canvas to associate with this instance.\r\n     */\r\n    ,\r\n    set: function set(canvas) {\r\n      this._canvas = canvas;\r\n      this.setView();\r\n    }\r\n    /**\r\n     * @returns {number} the current zoom factor\r\n     */\r\n\r\n  }, {\r\n    key: \"scale\",\r\n    get: function get() {\r\n      return this._view.scale;\r\n    }\r\n    /**\r\n     * Sets the zoom factor (clamped by the scale extents) and updates the view.\r\n     * @param {number} the new zoom factor\r\n     */\r\n\r\n  }, {\r\n    key: \"x\",\r\n\r\n    /**\r\n     * @returns {number} the horizontal component of the current pan offset\r\n     */\r\n    get: function get() {\r\n      return this._view.x;\r\n    }\r\n    /**\r\n     * Sets the horizontal pan offset (clamped by the document extents) and\r\n     * updates the view.\r\n     * @param {number} x the new offset\r\n     */\r\n    ,\r\n    set: function set(x) {\r\n      this.setView({\r\n        x: x\r\n      });\r\n    }\r\n    /**\r\n     * @retruns {number} the vertical component of the current pan offset\r\n     */\r\n\r\n  }, {\r\n    key: \"y\",\r\n    get: function get() {\r\n      return this._view.y;\r\n    }\r\n    /**\r\n     * Sets the vertical pan offset (clamped by the document extents) and\r\n     * updates the view.\r\n     * @param {number} y the new offset\r\n     */\r\n    ,\r\n    set: function set(y) {\r\n      this.setView({\r\n        y: y\r\n      });\r\n    }\r\n    /**\r\n     * @returns {View} a copy of this instance's current view state.\r\n     */\r\n\r\n  }, {\r\n    key: \"view\",\r\n    get: function get() {\r\n      return _extends({}, this._view);\r\n    }\r\n    /**\r\n     * @returns {Extents} a copy of the scale extents currently applied to this\r\n     * instance.\r\n     */\r\n\r\n  }, {\r\n    key: \"scaleExtents\",\r\n    get: function get() {\r\n      return _extends({}, this._scaleExtents);\r\n    }\r\n    /**\r\n     * Updates the minimum and maximum scale and resets the view transform if it\r\n     * is outside the new extents.\r\n     * @param {Extents} extents the new scale extents.\r\n     */\r\n    ,\r\n    set: function set(_ref8) {\r\n      var min = _ref8.min,\r\n          max = _ref8.max;\r\n      this._scaleExtents = {\r\n        min: min,\r\n        max: max\r\n      };\r\n      this.setView();\r\n    }\r\n    /**\r\n     * @returns {Size} the current document size (used to constrain the pan\r\n     * offset).\r\n     */\r\n\r\n  }, {\r\n    key: \"documentSize\",\r\n    get: function get() {\r\n      return _extends({}, this._documentSize);\r\n    }\r\n    /**\r\n     * Sets the document size and recalculates the view if it is outside the new\r\n     * bounds.\r\n     * @param {Size} size the new document size.\r\n     */\r\n    ,\r\n    set: function set(_ref9) {\r\n      var width = _ref9.width,\r\n          height = _ref9.height;\r\n      this._documentSize = {\r\n        width: width,\r\n        height: height\r\n      };\r\n      this.setView();\r\n    }\r\n    /**\r\n     * A view matrix expressing a series of transformations.\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setTransform\r\n     * @typedef Matrix\r\n     * @property {number} a horizontal scaling factor (1 == unscaled)\r\n     * @property {number} b vertical skewing factor (0 == unskewed)\r\n     * @property {number} c horizontal skewing factor (0 == unskewed)\r\n     * @property {number} d vertical scaling factor (1 == unscaled)\r\n     * @property {number} e horizontal translation (0 == untranslated)\r\n     * @property {number} f vertical translation (0 == untranslated)\r\n     */\r\n\r\n    /**\r\n     * @returns {Matrix} this coordinate system's current transformation matrix\r\n     */\r\n\r\n  }, {\r\n    key: \"transformMatrix\",\r\n    get: function get() {\r\n      //\r\n      return {\r\n        a: this._view.scale,\r\n        // horizontal scaling\r\n        b: 0,\r\n        // vertical skewing\r\n        c: 0,\r\n        // horizontal skewing\r\n        d: this._view.scale,\r\n        // vertical scaling\r\n        e: this._view.x,\r\n        f: this._view.y\r\n      };\r\n    }\r\n    /**\r\n     * An object expressing the bounds of a canvas object in terms of the\r\n     * coordinate system.\r\n     * @typedef CanvasBounds\r\n     * @property {number} left the left edge of the canvas in client space\r\n     * @property {number} right the right edge of the canvas in client space\r\n     * @property {number} top the top edge of the canvas in client space\r\n     * @property {number} bottom the bottom edge of the canvas in client space\r\n     * @property {number} canvasWidth the width of the canvas in client space\r\n     * @property {number} canvasHeight the height of the canvas in client space\r\n     * @property {ViewPoint} viewMin the top-left corner of the canvas in view space\r\n     * @property {ViewPoint} viewMax the bottom-right corner of the canvas in view space\r\n     */\r\n\r\n    /**\r\n     * @returns {CanvasBounds | undefined} the boundaries of the canvas linked to\r\n     * this coordinate system, or undefined if no canvas is set.\r\n     */\r\n\r\n  }, {\r\n    key: \"canvasBounds\",\r\n    get: function get() {\r\n      if (this._canvas) {\r\n        var _this$_canvas$getBoun = this._canvas.getBoundingClientRect(),\r\n            left = _this$_canvas$getBoun.left,\r\n            top = _this$_canvas$getBoun.top,\r\n            right = _this$_canvas$getBoun.right,\r\n            bottom = _this$_canvas$getBoun.bottom;\r\n\r\n        return {\r\n          viewMin: this.clientPointToViewPoint({\r\n            clientX: left,\r\n            clientY: top\r\n          }),\r\n          viewMax: this.clientPointToViewPoint({\r\n            clientX: right,\r\n            clientY: bottom\r\n          }),\r\n          left: left,\r\n          top: top,\r\n          right: right,\r\n          bottom: bottom,\r\n          canvasWidth: this._canvas.width,\r\n          canvasHeight: this._canvas.height\r\n        };\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {{left: number, top: number} | undefined}\r\n     */\r\n\r\n  }, {\r\n    key: \"canvasRect\",\r\n    get: function get() {\r\n      if (this.canvas) {\r\n        return this.canvas.getBoundingClientRect();\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }\r\n    /**\r\n     * Calculates a variant of the given view clamped according to the scale and\r\n     * document bounds. Does not modify this instance.\r\n     * @param {View} view the view constraints to clamp.\r\n     * @returns {View} a new view object representing the constrained input.\r\n     */\r\n\r\n  }]);\r\n\r\n  return CoordinateSystem;\r\n}();\r\n\r\nexport { CoordinateSystem as default };"],"mappings":"AAAA,SAASA,QAAQA,CAAA,EAAG;EAAEA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAAUC,MAAM,EAAE;IAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAC,CAAC;MAAE,KAAK,IAAII,GAAG,IAAID,MAAM,EAAE;QAAE,IAAIN,MAAM,CAACQ,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,MAAM,EAAEC,GAAG,CAAC,EAAE;UAAEL,MAAM,CAACK,GAAG,CAAC,GAAGD,MAAM,CAACC,GAAG,CAAC;QAAE;MAAE;IAAE;IAAE,OAAOL,MAAM;EAAE,CAAC;EAAE,OAAOH,QAAQ,CAACY,KAAK,CAAC,IAAI,EAAEP,SAAS,CAAC;AAAE;AAE5T,SAASQ,iBAAiBA,CAACV,MAAM,EAAEW,KAAK,EAAE;EAAE,KAAK,IAAIV,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGU,KAAK,CAACR,MAAM,EAAEF,CAAC,EAAE,EAAE;IAAE,IAAIW,UAAU,GAAGD,KAAK,CAACV,CAAC,CAAC;IAAEW,UAAU,CAACC,UAAU,GAAGD,UAAU,CAACC,UAAU,IAAI,KAAK;IAAED,UAAU,CAACE,YAAY,GAAG,IAAI;IAAE,IAAI,OAAO,IAAIF,UAAU,EAAEA,UAAU,CAACG,QAAQ,GAAG,IAAI;IAAEjB,MAAM,CAACkB,cAAc,CAAChB,MAAM,EAAEY,UAAU,CAACP,GAAG,EAAEO,UAAU,CAAC;EAAE;AAAE;AAE5T,SAASK,YAAYA,CAACC,WAAW,EAAEC,UAAU,EAAEC,WAAW,EAAE;EAAE,IAAID,UAAU,EAAET,iBAAiB,CAACQ,WAAW,CAACZ,SAAS,EAAEa,UAAU,CAAC;EAAE,IAAIC,WAAW,EAAEV,iBAAiB,CAACQ,WAAW,EAAEE,WAAW,CAAC;EAAE,OAAOF,WAAW;AAAE;AAEtN,SAASG,eAAeA,CAACC,GAAG,EAAEjB,GAAG,EAAEkB,KAAK,EAAE;EAAE,IAAIlB,GAAG,IAAIiB,GAAG,EAAE;IAAExB,MAAM,CAACkB,cAAc,CAACM,GAAG,EAAEjB,GAAG,EAAE;MAAEkB,KAAK,EAAEA,KAAK;MAAEV,UAAU,EAAE,IAAI;MAAEC,YAAY,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC;EAAE,CAAC,MAAM;IAAEO,GAAG,CAACjB,GAAG,CAAC,GAAGkB,KAAK;EAAE;EAAE,OAAOD,GAAG;AAAE;;AAEhN;AACA;AACA;AACA,IAAIE,eAAe,GAAG1B,MAAM,CAAC2B,MAAM,CAAC;EAClCC,CAAC,EAAE,CAAC;EACJC,CAAC,EAAE,CAAC;EACJC,cAAc,EAAE,CAAC;EACjBC,cAAc,EAAE;AAClB,CAAC,CAAC;AACF;AACA;AACA;;AAEA,IAAIC,WAAW,GAAGhC,MAAM,CAAC2B,MAAM,CAAC;EAC9BM,WAAW,EAAE,CAAC;EACdC,YAAY,EAAE,CAAC;EACfC,IAAI,EAAE,CAAC;EACPC,GAAG,EAAE,CAAC;EACNC,KAAK,EAAE,CAAC;EACRC,MAAM,EAAE,CAAC;EACTC,OAAO,EAAEb,eAAe;EACxBc,OAAO,EAAEd;AACX,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIe,QAAQ,GAAGzC,MAAM,CAAC2B,MAAM,CAAC;EAClCe,CAAC,EAAE,CAAC;EACJC,CAAC,EAAE,CAAC;EACJC,CAAC,EAAE,CAAC;EACJC,CAAC,EAAE,CAAC;EACJC,CAAC,EAAE,CAAC;EACJC,CAAC,EAAE;AACL,CAAC,CAAC;AAEF,SAASC,cAAcA,CAACvB,KAAK,EAAEwB,YAAY,EAAE;EAC3C,IAAIxB,KAAK,KAAK,IAAI,IAAI,OAAOA,KAAK,KAAK,WAAW,EAAE;IAClD,OAAOwB,YAAY;EACrB,CAAC,MAAM;IACL,OAAOxB,KAAK;EACd;AACF;AACA;AACA;AACA;AACA;;AAGA,IAAIyB,gBAAgB,GAAG,aAAa,YAAY;EAC9C;AACF;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;EACE,SAASA,gBAAgBA,CAACC,IAAI,EAAE;IAC9B,IAAIC,KAAK,GAAG,IAAI;IAEhB,IAAIC,YAAY,GAAGF,IAAI,CAACE,YAAY;MAChCC,YAAY,GAAGH,IAAI,CAACG,YAAY;IAEpC/B,eAAe,CAAC,IAAI,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;IAE9CA,eAAe,CAAC,IAAI,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;IAE9CA,eAAe,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC;IAEtCA,eAAe,CAAC,IAAI,EAAE,OAAO,EAAE;MAC7BgC,KAAK,EAAE,GAAG;MACV3B,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE;IACL,CAAC,CAAC;IAEFN,eAAe,CAAC,IAAI,EAAE,sBAAsB,EAAE,IAAIiC,GAAG,CAAC,CAAC,CAAC;IAExDjC,eAAe,CAAC,IAAI,EAAE,UAAU,EAAE,UAAUgC,KAAK,EAAE;MACjDH,KAAK,CAACK,OAAO,CAAC;QACZF,KAAK,EAAEA;MACT,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFhC,eAAe,CAAC,IAAI,EAAE,WAAW,EAAE,UAAUmC,KAAK,EAAE;MAClD,IAAIH,KAAK,GAAGG,KAAK,CAACH,KAAK;QACnB3B,CAAC,GAAG8B,KAAK,CAAC9B,CAAC;QACXC,CAAC,GAAG6B,KAAK,CAAC7B,CAAC;MACf,IAAI8B,kBAAkB,GAAGP,KAAK,CAACC,YAAY;QACvCO,GAAG,GAAGD,kBAAkB,CAACC,GAAG;QAC5BC,GAAG,GAAGF,kBAAkB,CAACE,GAAG;MAChC,IAAIC,kBAAkB,GAAGV,KAAK,CAACE,YAAY;QACvCS,KAAK,GAAGD,kBAAkB,CAACC,KAAK;QAChCC,MAAM,GAAGF,kBAAkB,CAACE,MAAM;MAEtC,IAAIC,KAAK,GAAGb,KAAK,CAACc,UAAU,IAAIlC,WAAW;QACvCG,IAAI,GAAG8B,KAAK,CAAC9B,IAAI;QACjBC,GAAG,GAAG6B,KAAK,CAAC7B,GAAG;QACfC,KAAK,GAAG4B,KAAK,CAAC5B,KAAK;QACnBC,MAAM,GAAG2B,KAAK,CAAC3B,MAAM;MAEzB,IAAIL,WAAW,GAAGI,KAAK,GAAGF,IAAI;MAC9B,IAAID,YAAY,GAAGI,MAAM,GAAGF,GAAG;MAC/B,IAAI+B,IAAI,GAAGlC,WAAW,GAAG,CAAC;MAC1B,IAAImC,IAAI,GAAG,EAAEL,KAAK,GAAGX,KAAK,CAACiB,KAAK,CAACd,KAAK,GAAGtB,WAAW,GAAG,CAAC,CAAC;MACzD,IAAIqC,IAAI,GAAGpC,YAAY,GAAG,CAAC;MAC3B,IAAIqC,IAAI,GAAG,EAAEP,MAAM,GAAGZ,KAAK,CAACiB,KAAK,CAACd,KAAK,GAAGrB,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;;MAE7D,OAAO;QACLqB,KAAK,EAAEiB,IAAI,CAACZ,GAAG,CAACY,IAAI,CAACX,GAAG,CAACN,KAAK,EAAEK,GAAG,CAAC,EAAEC,GAAG,CAAC;QAC1CjC,CAAC,EAAE4C,IAAI,CAACZ,GAAG,CAACY,IAAI,CAACX,GAAG,CAACjC,CAAC,EAAEwC,IAAI,CAAC,EAAED,IAAI,CAAC;QACpCtC,CAAC,EAAE2C,IAAI,CAACZ,GAAG,CAACY,IAAI,CAACX,GAAG,CAAChC,CAAC,EAAE0C,IAAI,CAAC,EAAED,IAAI;MACrC,CAAC;IACH,CAAC,CAAC;IAEF/C,eAAe,CAAC,IAAI,EAAE,WAAW,EAAE,YAAY;MAC7C6B,KAAK,CAACK,OAAO,CAAC;QACZF,KAAK,EAAE,GAAG;QACV3B,CAAC,EAAE,CAAC;QACJC,CAAC,EAAE;MACL,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFN,eAAe,CAAC,IAAI,EAAE,SAAS,EAAE,UAAUkD,IAAI,EAAE;MAC/C,IAAIC,OAAO,GAAGtB,KAAK,CAACuB,SAAS,CAAC5E,QAAQ,CAAC,CAAC,CAAC,EAAEqD,KAAK,CAACiB,KAAK,EAAEI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;MAEpE,IAAIG,WAAW,GAAGxB,KAAK,CAACiB,KAAK;QACzBd,KAAK,GAAGqB,WAAW,CAACrB,KAAK;QACzB3B,CAAC,GAAGgD,WAAW,CAAChD,CAAC;QACjBC,CAAC,GAAG+C,WAAW,CAAC/C,CAAC,CAAC,CAAC;;MAEvB,IAAI6C,OAAO,CAACnB,KAAK,KAAKA,KAAK,IAAImB,OAAO,CAAC9C,CAAC,KAAKA,CAAC,IAAI8C,OAAO,CAAC7C,CAAC,KAAKA,CAAC,EAAE;QACjEuB,KAAK,CAACiB,KAAK,GAAGK,OAAO;QAErBtB,KAAK,CAACyB,oBAAoB,CAACC,OAAO,CAAC,UAAUC,QAAQ,EAAE;UACrD,OAAOA,QAAQ,IAAIA,QAAQ,CAACL,OAAO,CAAC;QACtC,CAAC,CAAC;MACJ;MAEA,OAAO3E,QAAQ,CAAC,CAAC,CAAC,EAAEqD,KAAK,CAACiB,KAAK,CAAC;IAClC,CAAC,CAAC;IAEF9C,eAAe,CAAC,IAAI,EAAE,oBAAoB,EAAE,UAAUyD,UAAU,EAAEC,WAAW,EAAE;MAC7E,IAAIC,MAAM,GAAG9B,KAAK,CAAC+B,sBAAsB,CAACF,WAAW,CAAC;MAEtD,IAAIP,OAAO,GAAGtB,KAAK,CAACuB,SAAS,CAAC5E,QAAQ,CAAC,CAAC,CAAC,EAAEqD,KAAK,CAACiB,KAAK,EAAE;QACtDd,KAAK,EAAEH,KAAK,CAACiB,KAAK,CAACd,KAAK,GAAGyB;MAC7B,CAAC,CAAC,CAAC;MAEH,IAAII,iBAAiB,GAAGhC,KAAK,CAACiC,sBAAsB,CAACH,MAAM,EAAER,OAAO,CAAC;MAErEA,OAAO,CAAC9C,CAAC,GAAGwB,KAAK,CAACiB,KAAK,CAACzC,CAAC,IAAIwD,iBAAiB,CAACE,OAAO,GAAGL,WAAW,CAACK,OAAO,CAAC;MAC7EZ,OAAO,CAAC7C,CAAC,GAAGuB,KAAK,CAACiB,KAAK,CAACxC,CAAC,IAAIuD,iBAAiB,CAACG,OAAO,GAAGN,WAAW,CAACM,OAAO,CAAC;MAC7E,OAAOnC,KAAK,CAACK,OAAO,CAACiB,OAAO,CAAC;IAC/B,CAAC,CAAC;IAEFnD,eAAe,CAAC,IAAI,EAAE,wBAAwB,EAAE,UAAUiE,KAAK,EAAEf,IAAI,EAAE;MACrE,IAAIa,OAAO,GAAGE,KAAK,CAACF,OAAO;QACvBC,OAAO,GAAGC,KAAK,CAACD,OAAO;MAE3B,IAAId,IAAI,KAAK,KAAK,CAAC,EAAE;QACnBA,IAAI,GAAGrB,KAAK,CAACiB,KAAK;MACpB;MAEA,IAAIoB,KAAK,GAAGrC,KAAK,CAACc,UAAU,IAAIlC,WAAW;QACvCG,IAAI,GAAGsD,KAAK,CAACtD,IAAI;QACjBC,GAAG,GAAGqD,KAAK,CAACrD,GAAG;MAEnB,IAAIsD,eAAe,GAAGJ,OAAO,GAAGnD,IAAI;MACpC,IAAIwD,eAAe,GAAGJ,OAAO,GAAGnD,GAAG;MACnC,OAAO;QACLR,CAAC,EAAE,CAAC8D,eAAe,GAAGjB,IAAI,CAAC7C,CAAC,IAAI6C,IAAI,CAAClB,KAAK;QAC1C1B,CAAC,EAAE,CAAC8D,eAAe,GAAGlB,IAAI,CAAC5C,CAAC,IAAI4C,IAAI,CAAClB,KAAK;QAC1CmC,eAAe,EAAEA,eAAe;QAChCC,eAAe,EAAEA;MACnB,CAAC;IACH,CAAC,CAAC;IAEFpE,eAAe,CAAC,IAAI,EAAE,wBAAwB,EAAE,UAAUqE,KAAK,EAAEnB,IAAI,EAAE;MACrE,IAAI7C,CAAC,GAAGgE,KAAK,CAAChE,CAAC;QACXC,CAAC,GAAG+D,KAAK,CAAC/D,CAAC;MAEf,IAAI4C,IAAI,KAAK,KAAK,CAAC,EAAE;QACnBA,IAAI,GAAGrB,KAAK,CAACiB,KAAK;MACpB;MAEA,IAAIwB,KAAK,GAAGzC,KAAK,CAACc,UAAU,IAAIlC,WAAW;QACvCG,IAAI,GAAG0D,KAAK,CAAC1D,IAAI;QACjBC,GAAG,GAAGyD,KAAK,CAACzD,GAAG;MAEnB,IAAI0D,SAAS,GAAGlE,CAAC,GAAG6C,IAAI,CAAClB,KAAK,GAAGkB,IAAI,CAAC7C,CAAC;MACvC,IAAImE,SAAS,GAAGlE,CAAC,GAAG4C,IAAI,CAAClB,KAAK,GAAGkB,IAAI,CAAC5C,CAAC;MACvC,IAAIyD,OAAO,GAAGQ,SAAS,GAAG3D,IAAI;MAC9B,IAAIoD,OAAO,GAAGQ,SAAS,GAAG3D,GAAG;MAC7B,OAAO;QACLkD,OAAO,EAAEA,OAAO;QAChBC,OAAO,EAAEA,OAAO;QAChBO,SAAS,EAAEA,SAAS;QACpBC,SAAS,EAAEA,SAAS;QACpBnE,CAAC,EAAE0D,OAAO;QACVzD,CAAC,EAAE0D;MACL,CAAC;IACH,CAAC,CAAC;IAEFhE,eAAe,CAAC,IAAI,EAAE,0BAA0B,EAAE,UAAUwD,QAAQ,EAAE;MACpE3B,KAAK,CAACyB,oBAAoB,CAACmB,GAAG,CAACjB,QAAQ,CAAC;IAC1C,CAAC,CAAC;IAEF,IAAI,CAACkB,aAAa,GAAG5C,YAAY;IACjC,IAAI,CAAC6C,aAAa,GAAG5C,YAAY;EACnC;EACA;AACF;AACA;;EAGEnC,YAAY,CAAC+B,gBAAgB,EAAE,CAAC;IAC9B3C,GAAG,EAAE,QAAQ;IAEb;AACJ;AACA;IACI4F,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACC,OAAO;IACrB;IACA;AACJ;AACA;AACA,OAHI;;IAKAC,GAAG,EAAE,SAASA,GAAGA,CAACC,MAAM,EAAE;MACxB,IAAI,CAACF,OAAO,GAAGE,MAAM;MACrB,IAAI,CAAC7C,OAAO,CAAC,CAAC;IAChB;IACA;AACJ;AACA;EAEE,CAAC,EAAE;IACDlD,GAAG,EAAE,OAAO;IACZ4F,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;MAClB,OAAO,IAAI,CAAC9B,KAAK,CAACd,KAAK;IACzB;IACA;AACJ;AACA;AACA;EAEE,CAAC,EAAE;IACDhD,GAAG,EAAE,GAAG;IAER;AACJ;AACA;IACI4F,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;MAClB,OAAO,IAAI,CAAC9B,KAAK,CAACzC,CAAC;IACrB;IACA;AACJ;AACA;AACA;AACA,OAJI;;IAMAyE,GAAG,EAAE,SAASA,GAAGA,CAACzE,CAAC,EAAE;MACnB,IAAI,CAAC6B,OAAO,CAAC;QACX7B,CAAC,EAAEA;MACL,CAAC,CAAC;IACJ;IACA;AACJ;AACA;EAEE,CAAC,EAAE;IACDrB,GAAG,EAAE,GAAG;IACR4F,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;MAClB,OAAO,IAAI,CAAC9B,KAAK,CAACxC,CAAC;IACrB;IACA;AACJ;AACA;AACA;AACA,OAJI;;IAMAwE,GAAG,EAAE,SAASA,GAAGA,CAACxE,CAAC,EAAE;MACnB,IAAI,CAAC4B,OAAO,CAAC;QACX5B,CAAC,EAAEA;MACL,CAAC,CAAC;IACJ;IACA;AACJ;AACA;EAEE,CAAC,EAAE;IACDtB,GAAG,EAAE,MAAM;IACX4F,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;MAClB,OAAOpG,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAACsE,KAAK,CAAC;IACjC;IACA;AACJ;AACA;AACA;EAEE,CAAC,EAAE;IACD9D,GAAG,EAAE,cAAc;IACnB4F,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;MAClB,OAAOpG,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAACkG,aAAa,CAAC;IACzC;IACA;AACJ;AACA;AACA;AACA,OAJI;;IAMAI,GAAG,EAAE,SAASA,GAAGA,CAACE,KAAK,EAAE;MACvB,IAAI3C,GAAG,GAAG2C,KAAK,CAAC3C,GAAG;QACfC,GAAG,GAAG0C,KAAK,CAAC1C,GAAG;MACnB,IAAI,CAACoC,aAAa,GAAG;QACnBrC,GAAG,EAAEA,GAAG;QACRC,GAAG,EAAEA;MACP,CAAC;MACD,IAAI,CAACJ,OAAO,CAAC,CAAC;IAChB;IACA;AACJ;AACA;AACA;EAEE,CAAC,EAAE;IACDlD,GAAG,EAAE,cAAc;IACnB4F,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;MAClB,OAAOpG,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAACmG,aAAa,CAAC;IACzC;IACA;AACJ;AACA;AACA;AACA,OAJI;;IAMAG,GAAG,EAAE,SAASA,GAAGA,CAACG,KAAK,EAAE;MACvB,IAAIzC,KAAK,GAAGyC,KAAK,CAACzC,KAAK;QACnBC,MAAM,GAAGwC,KAAK,CAACxC,MAAM;MACzB,IAAI,CAACkC,aAAa,GAAG;QACnBnC,KAAK,EAAEA,KAAK;QACZC,MAAM,EAAEA;MACV,CAAC;MACD,IAAI,CAACP,OAAO,CAAC,CAAC;IAChB;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEI;AACJ;AACA;EAEE,CAAC,EAAE;IACDlD,GAAG,EAAE,iBAAiB;IACtB4F,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;MAClB;MACA,OAAO;QACLzD,CAAC,EAAE,IAAI,CAAC2B,KAAK,CAACd,KAAK;QACnB;QACAZ,CAAC,EAAE,CAAC;QACJ;QACAC,CAAC,EAAE,CAAC;QACJ;QACAC,CAAC,EAAE,IAAI,CAACwB,KAAK,CAACd,KAAK;QACnB;QACAT,CAAC,EAAE,IAAI,CAACuB,KAAK,CAACzC,CAAC;QACfmB,CAAC,EAAE,IAAI,CAACsB,KAAK,CAACxC;MAChB,CAAC;IACH;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEI;AACJ;AACA;AACA;EAEE,CAAC,EAAE;IACDtB,GAAG,EAAE,cAAc;IACnB4F,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;MAClB,IAAI,IAAI,CAACC,OAAO,EAAE;QAChB,IAAIK,qBAAqB,GAAG,IAAI,CAACL,OAAO,CAACM,qBAAqB,CAAC,CAAC;UAC5DvE,IAAI,GAAGsE,qBAAqB,CAACtE,IAAI;UACjCC,GAAG,GAAGqE,qBAAqB,CAACrE,GAAG;UAC/BC,KAAK,GAAGoE,qBAAqB,CAACpE,KAAK;UACnCC,MAAM,GAAGmE,qBAAqB,CAACnE,MAAM;QAEzC,OAAO;UACLC,OAAO,EAAE,IAAI,CAAC4C,sBAAsB,CAAC;YACnCG,OAAO,EAAEnD,IAAI;YACboD,OAAO,EAAEnD;UACX,CAAC,CAAC;UACFI,OAAO,EAAE,IAAI,CAAC2C,sBAAsB,CAAC;YACnCG,OAAO,EAAEjD,KAAK;YACdkD,OAAO,EAAEjD;UACX,CAAC,CAAC;UACFH,IAAI,EAAEA,IAAI;UACVC,GAAG,EAAEA,GAAG;UACRC,KAAK,EAAEA,KAAK;UACZC,MAAM,EAAEA,MAAM;UACdL,WAAW,EAAE,IAAI,CAACmE,OAAO,CAACrC,KAAK;UAC/B7B,YAAY,EAAE,IAAI,CAACkE,OAAO,CAACpC;QAC7B,CAAC;MACH,CAAC,MAAM;QACL,OAAO2C,SAAS;MAClB;IACF;IACA;AACJ;AACA;AACA;EAEE,CAAC,EAAE;IACDpG,GAAG,EAAE,YAAY;IACjB4F,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;MAClB,IAAI,IAAI,CAACG,MAAM,EAAE;QACf,OAAO,IAAI,CAACA,MAAM,CAACI,qBAAqB,CAAC,CAAC;MAC5C,CAAC,MAAM;QACL,OAAOC,SAAS;MAClB;IACF;IACA;AACJ;AACA;AACA;AACA;AACA;EAEE,CAAC,CAAC,CAAC;EAEH,OAAOzD,gBAAgB;AACzB,CAAC,CAAC,CAAC;AAEH,SAASA,gBAAgB,IAAI0D,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}